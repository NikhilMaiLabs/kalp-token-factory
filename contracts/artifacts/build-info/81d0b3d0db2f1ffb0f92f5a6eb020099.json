{
	"id": "81d0b3d0db2f1ffb0f92f5a6eb020099",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\ncontract ERC20 is Initializable, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    uint256 private _maxSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    function init(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        uint256 maxSupply_\n    ) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n\n        _maxSupply = maxSupply_;\n    }\n\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function maxSupply() public view virtual returns (uint256) {\n        return _maxSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        _transfer(msg.sender, to, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        _spendAllowance(from, msg.sender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = msg.sender;\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = msg.sender;\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    function burn(uint256 amount) public virtual {\n        _burn(msg.sender, amount);\n    }\n\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, msg.sender, amount);\n        _burn(account, amount);\n    }\n\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n        // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(_totalSupply + amount <= _maxSupply, \"ERC20: cap exceeded\");\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n        // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n\n"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":199:6127  contract ERC20 is Initializable, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":199:6127  contract ERC20 is Initializable, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":817:915  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1792:1956  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1133:1239  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1962:2181  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1029:1127  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2187:2419  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2856:2943  function burn(uint256 amount) public virtual {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/ERC20.sol\":1344:1469  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2949:3108  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/ERC20.sol\":921:1023  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2425:2850  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1475:1631  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1245:1338  function maxSupply() public view virtual returns (uint256) {... */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1637:1786  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":817:915  function name() public view virtual override returns (string memory) {... */\n    tag_21:\n        /* \"contracts/ERC20.sol\":871:884  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":903:908  _name */\n      0x04\n        /* \"contracts/ERC20.sol\":896:908  return _name */\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_80\n      jump\t// in\n    tag_81:\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":817:915  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1792:1956  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n        /* \"contracts/ERC20.sol\":1875:1879  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":1891:1928  _approve(msg.sender, spender, amount) */\n      tag_86\n        /* \"contracts/ERC20.sol\":1900:1910  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":1912:1919  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":1921:1927  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":1891:1899  _approve */\n      tag_87\n        /* \"contracts/ERC20.sol\":1891:1928  _approve(msg.sender, spender, amount) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/ERC20.sol\":1945:1949  true */\n      0x01\n        /* \"contracts/ERC20.sol\":1938:1949  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1792:1956  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1133:1239  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_31:\n        /* \"contracts/ERC20.sol\":1194:1201  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1220:1232  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ERC20.sol\":1213:1232  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1133:1239  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1962:2181  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_37:\n        /* \"contracts/ERC20.sol\":2059:2063  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2075:2116  _spendAllowance(from, msg.sender, amount) */\n      tag_90\n        /* \"contracts/ERC20.sol\":2091:2095  from */\n      dup5\n        /* \"contracts/ERC20.sol\":2097:2107  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2109:2115  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":2075:2090  _spendAllowance */\n      tag_91\n        /* \"contracts/ERC20.sol\":2075:2116  _spendAllowance(from, msg.sender, amount) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/ERC20.sol\":2126:2153  _transfer(from, to, amount) */\n      tag_92\n        /* \"contracts/ERC20.sol\":2136:2140  from */\n      dup5\n        /* \"contracts/ERC20.sol\":2142:2144  to */\n      dup5\n        /* \"contracts/ERC20.sol\":2146:2152  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":2126:2135  _transfer */\n      tag_93\n        /* \"contracts/ERC20.sol\":2126:2153  _transfer(from, to, amount) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/ERC20.sol\":2170:2174  true */\n      0x01\n        /* \"contracts/ERC20.sol\":2163:2174  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1962:2181  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1029:1127  function decimals() public view virtual override returns (uint8) {... */\n    tag_40:\n        /* \"contracts/ERC20.sol\":1087:1092  uint8 */\n      0x00\n        /* \"contracts/ERC20.sol\":1111:1120  _decimals */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":1104:1120  return _decimals */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1029:1127  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2187:2419  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"contracts/ERC20.sol\":2275:2279  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2291:2304  address owner */\n      dup1\n        /* \"contracts/ERC20.sol\":2307:2317  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2291:2317  address owner = msg.sender */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2327:2391  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_96\n        /* \"contracts/ERC20.sol\":2336:2341  owner */\n      dup2\n        /* \"contracts/ERC20.sol\":2343:2350  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":2380:2390  addedValue */\n      dup6\n        /* \"contracts/ERC20.sol\":2352:2377  allowance(owner, spender) */\n      tag_97\n        /* \"contracts/ERC20.sol\":2362:2367  owner */\n      dup6\n        /* \"contracts/ERC20.sol\":2369:2376  spender */\n      dup10\n        /* \"contracts/ERC20.sol\":2352:2361  allowance */\n      tag_76\n        /* \"contracts/ERC20.sol\":2352:2377  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/ERC20.sol\":2352:2390  allowance(owner, spender) + addedValue */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/ERC20.sol\":2327:2335  _approve */\n      tag_87\n        /* \"contracts/ERC20.sol\":2327:2391  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/ERC20.sol\":2408:2412  true */\n      0x01\n        /* \"contracts/ERC20.sol\":2401:2412  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":2187:2419  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2856:2943  function burn(uint256 amount) public virtual {... */\n    tag_50:\n        /* \"contracts/ERC20.sol\":2911:2936  _burn(msg.sender, amount) */\n      tag_101\n        /* \"contracts/ERC20.sol\":2917:2927  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2929:2935  amount */\n      dup3\n        /* \"contracts/ERC20.sol\":2911:2916  _burn */\n      tag_102\n        /* \"contracts/ERC20.sol\":2911:2936  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/ERC20.sol\":2856:2943  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1344:1469  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_54:\n        /* \"contracts/ERC20.sol\":1418:1425  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1444:1453  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":1444:1462  _balances[account] */\n      0x00\n        /* \"contracts/ERC20.sol\":1454:1461  account */\n      dup4\n        /* \"contracts/ERC20.sol\":1444:1462  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":1437:1462  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1344:1469  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2949:3108  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_58:\n        /* \"contracts/ERC20.sol\":3025:3069  _spendAllowance(account, msg.sender, amount) */\n      tag_105\n        /* \"contracts/ERC20.sol\":3041:3048  account */\n      dup3\n        /* \"contracts/ERC20.sol\":3050:3060  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":3062:3068  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":3025:3040  _spendAllowance */\n      tag_91\n        /* \"contracts/ERC20.sol\":3025:3069  _spendAllowance(account, msg.sender, amount) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/ERC20.sol\":3079:3101  _burn(account, amount) */\n      tag_106\n        /* \"contracts/ERC20.sol\":3085:3092  account */\n      dup3\n        /* \"contracts/ERC20.sol\":3094:3100  amount */\n      dup3\n        /* \"contracts/ERC20.sol\":3079:3084  _burn */\n      tag_102\n        /* \"contracts/ERC20.sol\":3079:3101  _burn(account, amount) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/ERC20.sol\":2949:3108  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":921:1023  function symbol() public view virtual override returns (string memory) {... */\n    tag_60:\n        /* \"contracts/ERC20.sol\":977:990  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":1009:1016  _symbol */\n      0x05\n        /* \"contracts/ERC20.sol\":1002:1016  return _symbol */\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_80\n      jump\t// in\n    tag_108:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_80\n      jump\t// in\n    tag_109:\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_111\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_110)\n    tag_111:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":921:1023  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2425:2850  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_64:\n        /* \"contracts/ERC20.sol\":2518:2522  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2534:2547  address owner */\n      dup1\n        /* \"contracts/ERC20.sol\":2550:2560  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2534:2560  address owner = msg.sender */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2570:2594  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20.sol\":2597:2622  allowance(owner, spender) */\n      tag_114\n        /* \"contracts/ERC20.sol\":2607:2612  owner */\n      dup3\n        /* \"contracts/ERC20.sol\":2614:2621  spender */\n      dup7\n        /* \"contracts/ERC20.sol\":2597:2606  allowance */\n      tag_76\n        /* \"contracts/ERC20.sol\":2597:2622  allowance(owner, spender) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/ERC20.sol\":2570:2622  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2660:2675  subtractedValue */\n      dup4\n        /* \"contracts/ERC20.sol\":2640:2656  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":2640:2675  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":2632:2717  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/ERC20.sol\":2751:2811  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_118\n        /* \"contracts/ERC20.sol\":2760:2765  owner */\n      dup3\n        /* \"contracts/ERC20.sol\":2767:2774  spender */\n      dup7\n        /* \"contracts/ERC20.sol\":2795:2810  subtractedValue */\n      dup7\n        /* \"contracts/ERC20.sol\":2776:2792  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":2776:2810  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/ERC20.sol\":2751:2759  _approve */\n      tag_87\n        /* \"contracts/ERC20.sol\":2751:2811  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC20.sol\":2839:2843  true */\n      0x01\n        /* \"contracts/ERC20.sol\":2832:2843  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":2425:2850  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1475:1631  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_68:\n        /* \"contracts/ERC20.sol\":1554:1558  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":1570:1603  _transfer(msg.sender, to, amount) */\n      tag_120\n        /* \"contracts/ERC20.sol\":1580:1590  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":1592:1594  to */\n      dup5\n        /* \"contracts/ERC20.sol\":1596:1602  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":1570:1579  _transfer */\n      tag_93\n        /* \"contracts/ERC20.sol\":1570:1603  _transfer(msg.sender, to, amount) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ERC20.sol\":1620:1624  true */\n      0x01\n        /* \"contracts/ERC20.sol\":1613:1624  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1475:1631  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1245:1338  function maxSupply() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"contracts/ERC20.sol\":1295:1302  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1321:1331  _maxSupply */\n      sload(0x03)\n        /* \"contracts/ERC20.sol\":1314:1331  return _maxSupply */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1245:1338  function maxSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1637:1786  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_76:\n        /* \"contracts/ERC20.sol\":1726:1733  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1752:1763  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":1752:1770  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":1764:1769  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":1752:1770  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":1752:1779  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":1771:1778  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":1752:1779  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":1745:1779  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1637:1786  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5175:5515  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_87:\n        /* \"contracts/ERC20.sol\":5293:5294  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5276:5295  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5276:5281  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":5276:5295  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":5268:5336  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/ERC20.sol\":5373:5374  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5354:5375  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5354:5361  spender */\n      dup3\n        /* \"contracts/ERC20.sol\":5354:5375  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":5346:5414  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/ERC20.sol\":5455:5461  amount */\n      dup1\n        /* \"contracts/ERC20.sol\":5425:5436  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":5425:5443  _allowances[owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":5437:5442  owner */\n      dup6\n        /* \"contracts/ERC20.sol\":5425:5443  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5425:5452  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5444:5451  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":5425:5452  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5425:5461  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":5492:5499  spender */\n      dup2\n        /* \"contracts/ERC20.sol\":5476:5508  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5485:5490  owner */\n      dup4\n        /* \"contracts/ERC20.sol\":5476:5508  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":5501:5507  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":5476:5508  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":5175:5515  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5521:5932  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_91:\n        /* \"contracts/ERC20.sol\":5621:5645  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20.sol\":5648:5673  allowance(owner, spender) */\n      tag_132\n        /* \"contracts/ERC20.sol\":5658:5663  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":5665:5672  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":5648:5657  allowance */\n      tag_76\n        /* \"contracts/ERC20.sol\":5648:5673  allowance(owner, spender) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC20.sol\":5621:5673  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5707:5724  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC20.sol\":5687:5703  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":5687:5724  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/ERC20.sol\":5683:5926  if (currentAllowance != type(uint256).max) {... */\n      tag_133\n      jumpi\n        /* \"contracts/ERC20.sol\":5768:5774  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":5748:5764  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":5748:5774  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":5740:5808  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/ERC20.sol\":5850:5901  _approve(owner, spender, currentAllowance - amount) */\n      tag_137\n        /* \"contracts/ERC20.sol\":5859:5864  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":5866:5873  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":5894:5900  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":5875:5891  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":5875:5900  currentAllowance - amount */\n      sub\n        /* \"contracts/ERC20.sol\":5850:5858  _approve */\n      tag_87\n        /* \"contracts/ERC20.sol\":5850:5901  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/ERC20.sol\":5683:5926  if (currentAllowance != type(uint256).max) {... */\n    tag_133:\n        /* \"contracts/ERC20.sol\":5611:5932  {... */\n      pop\n        /* \"contracts/ERC20.sol\":5521:5932  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3114:3894  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_93:\n        /* \"contracts/ERC20.sol\":3226:3227  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":3210:3228  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3210:3214  from */\n      dup4\n        /* \"contracts/ERC20.sol\":3210:3228  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":3202:3270  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/ERC20.sol\":3302:3303  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":3288:3304  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3288:3290  to */\n      dup3\n        /* \"contracts/ERC20.sol\":3288:3304  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":3280:3344  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/ERC20.sol\":3355:3393  _beforeTokenTransfer(from, to, amount) */\n      tag_145\n        /* \"contracts/ERC20.sol\":3376:3380  from */\n      dup4\n        /* \"contracts/ERC20.sol\":3382:3384  to */\n      dup4\n        /* \"contracts/ERC20.sol\":3386:3392  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":3355:3375  _beforeTokenTransfer */\n      tag_146\n        /* \"contracts/ERC20.sol\":3355:3393  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ERC20.sol\":3404:3423  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC20.sol\":3426:3435  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":3426:3441  _balances[from] */\n      0x00\n        /* \"contracts/ERC20.sol\":3436:3440  from */\n      dup6\n        /* \"contracts/ERC20.sol\":3426:3441  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3404:3441  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3474:3480  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":3459:3470  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":3459:3480  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":3451:3523  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/ERC20.sol\":3589:3595  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":3575:3586  fromBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":3575:3595  fromBalance - amount */\n      sub\n        /* \"contracts/ERC20.sol\":3557:3566  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":3557:3572  _balances[from] */\n      dup1\n        /* \"contracts/ERC20.sol\":3567:3571  from */\n      dup7\n        /* \"contracts/ERC20.sol\":3557:3572  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":3557:3595  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3781:3787  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":3764:3773  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":3764:3777  _balances[to] */\n      dup1\n        /* \"contracts/ERC20.sol\":3774:3776  to */\n      dup6\n        /* \"contracts/ERC20.sol\":3764:3777  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20.sol\":3764:3787  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3828:3830  to */\n      dup3\n        /* \"contracts/ERC20.sol\":3813:3839  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3822:3826  from */\n      dup5\n        /* \"contracts/ERC20.sol\":3813:3839  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":3832:3838  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3813:3839  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":3850:3887  _afterTokenTransfer(from, to, amount) */\n      tag_151\n        /* \"contracts/ERC20.sol\":3870:3874  from */\n      dup5\n        /* \"contracts/ERC20.sol\":3876:3878  to */\n      dup5\n        /* \"contracts/ERC20.sol\":3880:3886  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3850:3869  _afterTokenTransfer */\n      tag_152\n        /* \"contracts/ERC20.sol\":3850:3887  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/ERC20.sol\":3192:3894  {... */\n      pop\n        /* \"contracts/ERC20.sol\":3114:3894  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4514:5169  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_102:\n        /* \"contracts/ERC20.sol\":4616:4617  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":4597:4618  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":4597:4604  account */\n      dup3\n        /* \"contracts/ERC20.sol\":4597:4618  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":4589:4656  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/ERC20.sol\":4667:4716  _beforeTokenTransfer(account, address(0), amount) */\n      tag_157\n        /* \"contracts/ERC20.sol\":4688:4695  account */\n      dup3\n        /* \"contracts/ERC20.sol\":4705:4706  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":4709:4715  amount */\n      dup4\n        /* \"contracts/ERC20.sol\":4667:4687  _beforeTokenTransfer */\n      tag_146\n        /* \"contracts/ERC20.sol\":4667:4716  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/ERC20.sol\":4727:4749  uint256 accountBalance */\n      0x00\n        /* \"contracts/ERC20.sol\":4752:4761  _balances */\n      dup1\n        /* \"contracts/ERC20.sol\":4752:4770  _balances[account] */\n      0x00\n        /* \"contracts/ERC20.sol\":4762:4769  account */\n      dup5\n        /* \"contracts/ERC20.sol\":4752:4770  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4727:4770  uint256 accountBalance = _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4806:4812  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":4788:4802  accountBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":4788:4812  accountBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":4780:4851  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/ERC20.sol\":4923:4929  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":4906:4920  accountBalance */\n      dup2\n        /* \"contracts/ERC20.sol\":4906:4929  accountBalance - amount */\n      sub\n        /* \"contracts/ERC20.sol\":4885:4894  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":4885:4903  _balances[account] */\n      dup1\n        /* \"contracts/ERC20.sol\":4895:4902  account */\n      dup6\n        /* \"contracts/ERC20.sol\":4885:4903  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4885:4929  _balances[account] = accountBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":5034:5040  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":5018:5030  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/ERC20.sol\":5018:5040  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":5092:5093  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5066:5103  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5075:5082  account */\n      dup4\n        /* \"contracts/ERC20.sol\":5066:5103  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":5096:5102  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":5066:5103  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":5114:5162  _afterTokenTransfer(account, address(0), amount) */\n      tag_162\n        /* \"contracts/ERC20.sol\":5134:5141  account */\n      dup4\n        /* \"contracts/ERC20.sol\":5151:5152  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":5155:5161  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":5114:5133  _afterTokenTransfer */\n      tag_152\n        /* \"contracts/ERC20.sol\":5114:5162  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/ERC20.sol\":4579:5169  {... */\n      pop\n        /* \"contracts/ERC20.sol\":4514:5169  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5938:6029  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_146:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":6035:6125  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_152:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_165:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_166:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_167:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_209:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_209)\n    tag_211:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_168:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_169:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_214\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_165\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":818:889   */\n      tag_215\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_166\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_216\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_167\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":988:1017   */\n      tag_217\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_168\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_23:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_219\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_169\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_171:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_173:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_174:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_225\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_173\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_175:\n        /* \"#utility.yul\":1983:2007   */\n      tag_227\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_174\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_228:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_176:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_230\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_175\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_177:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_178:\n        /* \"#utility.yul\":2339:2363   */\n      tag_233\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_177\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_234:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_179:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_236\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_178\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_26:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_239\n      tag_171\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2632:2751   */\n    tag_238:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_240\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_176\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_241\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_179\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_180:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_181:\n        /* \"#utility.yul\":3196:3217   */\n      tag_244\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_180\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_29:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_246\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_181\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_182:\n        /* \"#utility.yul\":3533:3557   */\n      tag_248\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_177\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_33:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_250\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_182\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_36:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_253\n      tag_171\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3908:4027   */\n    tag_252:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_254\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_176\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_255\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_176\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_256\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_179\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_183:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_184:\n        /* \"#utility.yul\":4598:4620   */\n      tag_259\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_183\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_42:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_261\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_184\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_49:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_264\n      tag_171\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4929:5048   */\n    tag_263:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_265\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_179\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_53:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_268\n      tag_171\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5264:5383   */\n    tag_267:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_269\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_176\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5997   */\n    tag_75:\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5599:5605   */\n      dup1\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup4\n        /* \"#utility.yul\":5627:5634   */\n      dup6\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_272\n      tag_171\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5616:5735   */\n    tag_271:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_273\n        /* \"#utility.yul\":5844:5851   */\n      dup6\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup7\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_176\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5789:5852   */\n      swap3\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5927:5980   */\n      tag_274\n        /* \"#utility.yul\":5972:5979   */\n      dup6\n        /* \"#utility.yul\":5963:5969   */\n      dup3\n        /* \"#utility.yul\":5952:5961   */\n      dup7\n        /* \"#utility.yul\":5948:5970   */\n      add\n        /* \"#utility.yul\":5927:5980   */\n      tag_176\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5917:5980   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5990   */\n      pop\n        /* \"#utility.yul\":5523:5997   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6183   */\n    tag_185:\n        /* \"#utility.yul\":6051:6128   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6048:6049   */\n      0x00\n        /* \"#utility.yul\":6041:6129   */\n      mstore\n        /* \"#utility.yul\":6148:6152   */\n      0x22\n        /* \"#utility.yul\":6145:6146   */\n      0x04\n        /* \"#utility.yul\":6138:6153   */\n      mstore\n        /* \"#utility.yul\":6172:6176   */\n      0x24\n        /* \"#utility.yul\":6169:6170   */\n      0x00\n        /* \"#utility.yul\":6162:6177   */\n      revert\n        /* \"#utility.yul\":6189:6509   */\n    tag_80:\n        /* \"#utility.yul\":6233:6239   */\n      0x00\n        /* \"#utility.yul\":6270:6271   */\n      0x02\n        /* \"#utility.yul\":6264:6268   */\n      dup3\n        /* \"#utility.yul\":6260:6272   */\n      div\n        /* \"#utility.yul\":6250:6272   */\n      swap1\n      pop\n        /* \"#utility.yul\":6317:6318   */\n      0x01\n        /* \"#utility.yul\":6311:6315   */\n      dup3\n        /* \"#utility.yul\":6307:6319   */\n      and\n        /* \"#utility.yul\":6338:6356   */\n      dup1\n        /* \"#utility.yul\":6328:6409   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":6394:6398   */\n      0x7f\n        /* \"#utility.yul\":6386:6392   */\n      dup3\n        /* \"#utility.yul\":6382:6399   */\n      and\n        /* \"#utility.yul\":6372:6399   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6409   */\n    tag_277:\n        /* \"#utility.yul\":6456:6458   */\n      0x20\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6445:6459   */\n      lt\n        /* \"#utility.yul\":6425:6443   */\n      dup2\n        /* \"#utility.yul\":6422:6460   */\n      sub\n        /* \"#utility.yul\":6419:6503   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":6475:6493   */\n      tag_279\n      tag_185\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6419:6503   */\n    tag_278:\n        /* \"#utility.yul\":6240:6509   */\n      pop\n        /* \"#utility.yul\":6189:6509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6515:6695   */\n    tag_186:\n        /* \"#utility.yul\":6563:6640   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6560:6561   */\n      0x00\n        /* \"#utility.yul\":6553:6641   */\n      mstore\n        /* \"#utility.yul\":6660:6664   */\n      0x11\n        /* \"#utility.yul\":6657:6658   */\n      0x04\n        /* \"#utility.yul\":6650:6665   */\n      mstore\n        /* \"#utility.yul\":6684:6688   */\n      0x24\n        /* \"#utility.yul\":6681:6682   */\n      0x00\n        /* \"#utility.yul\":6674:6689   */\n      revert\n        /* \"#utility.yul\":6701:6892   */\n    tag_99:\n        /* \"#utility.yul\":6741:6744   */\n      0x00\n        /* \"#utility.yul\":6760:6780   */\n      tag_282\n        /* \"#utility.yul\":6778:6779   */\n      dup3\n        /* \"#utility.yul\":6760:6780   */\n      tag_177\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6755:6780   */\n      swap2\n      pop\n        /* \"#utility.yul\":6794:6814   */\n      tag_283\n        /* \"#utility.yul\":6812:6813   */\n      dup4\n        /* \"#utility.yul\":6794:6814   */\n      tag_177\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6789:6814   */\n      swap3\n      pop\n        /* \"#utility.yul\":6837:6838   */\n      dup3\n        /* \"#utility.yul\":6834:6835   */\n      dup3\n        /* \"#utility.yul\":6830:6839   */\n      add\n        /* \"#utility.yul\":6823:6839   */\n      swap1\n      pop\n        /* \"#utility.yul\":6858:6861   */\n      dup1\n        /* \"#utility.yul\":6855:6856   */\n      dup3\n        /* \"#utility.yul\":6852:6862   */\n      gt\n        /* \"#utility.yul\":6849:6885   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":6865:6883   */\n      tag_285\n      tag_186\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6849:6885   */\n    tag_284:\n        /* \"#utility.yul\":6701:6892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:7122   */\n    tag_187:\n        /* \"#utility.yul\":7038:7072   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7034:7035   */\n      0x00\n        /* \"#utility.yul\":7026:7032   */\n      dup3\n        /* \"#utility.yul\":7022:7036   */\n      add\n        /* \"#utility.yul\":7015:7073   */\n      mstore\n        /* \"#utility.yul\":7107:7114   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7102:7104   */\n      0x20\n        /* \"#utility.yul\":7094:7100   */\n      dup3\n        /* \"#utility.yul\":7090:7105   */\n      add\n        /* \"#utility.yul\":7083:7115   */\n      mstore\n        /* \"#utility.yul\":6898:7122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7128:7494   */\n    tag_188:\n        /* \"#utility.yul\":7270:7273   */\n      0x00\n        /* \"#utility.yul\":7291:7358   */\n      tag_288\n        /* \"#utility.yul\":7355:7357   */\n      0x25\n        /* \"#utility.yul\":7350:7353   */\n      dup4\n        /* \"#utility.yul\":7291:7358   */\n      tag_166\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7284:7358   */\n      swap2\n      pop\n        /* \"#utility.yul\":7367:7460   */\n      tag_289\n        /* \"#utility.yul\":7456:7459   */\n      dup3\n        /* \"#utility.yul\":7367:7460   */\n      tag_187\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7485:7487   */\n      0x40\n        /* \"#utility.yul\":7480:7483   */\n      dup3\n        /* \"#utility.yul\":7476:7488   */\n      add\n        /* \"#utility.yul\":7469:7488   */\n      swap1\n      pop\n        /* \"#utility.yul\":7128:7494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7500:7919   */\n    tag_117:\n        /* \"#utility.yul\":7666:7670   */\n      0x00\n        /* \"#utility.yul\":7704:7706   */\n      0x20\n        /* \"#utility.yul\":7693:7702   */\n      dup3\n        /* \"#utility.yul\":7689:7707   */\n      add\n        /* \"#utility.yul\":7681:7707   */\n      swap1\n      pop\n        /* \"#utility.yul\":7753:7762   */\n      dup2\n        /* \"#utility.yul\":7747:7751   */\n      dup2\n        /* \"#utility.yul\":7743:7763   */\n      sub\n        /* \"#utility.yul\":7739:7740   */\n      0x00\n        /* \"#utility.yul\":7728:7737   */\n      dup4\n        /* \"#utility.yul\":7724:7741   */\n      add\n        /* \"#utility.yul\":7717:7764   */\n      mstore\n        /* \"#utility.yul\":7781:7912   */\n      tag_291\n        /* \"#utility.yul\":7907:7911   */\n      dup2\n        /* \"#utility.yul\":7781:7912   */\n      tag_188\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7773:7912   */\n      swap1\n      pop\n        /* \"#utility.yul\":7500:7919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7925:8148   */\n    tag_189:\n        /* \"#utility.yul\":8065:8099   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8061:8062   */\n      0x00\n        /* \"#utility.yul\":8053:8059   */\n      dup3\n        /* \"#utility.yul\":8049:8063   */\n      add\n        /* \"#utility.yul\":8042:8100   */\n      mstore\n        /* \"#utility.yul\":8134:8140   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8129:8131   */\n      0x20\n        /* \"#utility.yul\":8121:8127   */\n      dup3\n        /* \"#utility.yul\":8117:8132   */\n      add\n        /* \"#utility.yul\":8110:8141   */\n      mstore\n        /* \"#utility.yul\":7925:8148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8154:8520   */\n    tag_190:\n        /* \"#utility.yul\":8296:8299   */\n      0x00\n        /* \"#utility.yul\":8317:8384   */\n      tag_294\n        /* \"#utility.yul\":8381:8383   */\n      0x24\n        /* \"#utility.yul\":8376:8379   */\n      dup4\n        /* \"#utility.yul\":8317:8384   */\n      tag_166\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8310:8384   */\n      swap2\n      pop\n        /* \"#utility.yul\":8393:8486   */\n      tag_295\n        /* \"#utility.yul\":8482:8485   */\n      dup3\n        /* \"#utility.yul\":8393:8486   */\n      tag_189\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8511:8513   */\n      0x40\n        /* \"#utility.yul\":8506:8509   */\n      dup3\n        /* \"#utility.yul\":8502:8514   */\n      add\n        /* \"#utility.yul\":8495:8514   */\n      swap1\n      pop\n        /* \"#utility.yul\":8154:8520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8945   */\n    tag_126:\n        /* \"#utility.yul\":8692:8696   */\n      0x00\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8719:8728   */\n      dup3\n        /* \"#utility.yul\":8715:8733   */\n      add\n        /* \"#utility.yul\":8707:8733   */\n      swap1\n      pop\n        /* \"#utility.yul\":8779:8788   */\n      dup2\n        /* \"#utility.yul\":8773:8777   */\n      dup2\n        /* \"#utility.yul\":8769:8789   */\n      sub\n        /* \"#utility.yul\":8765:8766   */\n      0x00\n        /* \"#utility.yul\":8754:8763   */\n      dup4\n        /* \"#utility.yul\":8750:8767   */\n      add\n        /* \"#utility.yul\":8743:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8938   */\n      tag_297\n        /* \"#utility.yul\":8933:8937   */\n      dup2\n        /* \"#utility.yul\":8807:8938   */\n      tag_190\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8799:8938   */\n      swap1\n      pop\n        /* \"#utility.yul\":8526:8945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8951:9172   */\n    tag_191:\n        /* \"#utility.yul\":9091:9125   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9087:9088   */\n      0x00\n        /* \"#utility.yul\":9079:9085   */\n      dup3\n        /* \"#utility.yul\":9075:9089   */\n      add\n        /* \"#utility.yul\":9068:9126   */\n      mstore\n        /* \"#utility.yul\":9160:9164   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9155:9157   */\n      0x20\n        /* \"#utility.yul\":9147:9153   */\n      dup3\n        /* \"#utility.yul\":9143:9158   */\n      add\n        /* \"#utility.yul\":9136:9165   */\n      mstore\n        /* \"#utility.yul\":8951:9172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9178:9544   */\n    tag_192:\n        /* \"#utility.yul\":9320:9323   */\n      0x00\n        /* \"#utility.yul\":9341:9408   */\n      tag_300\n        /* \"#utility.yul\":9405:9407   */\n      0x22\n        /* \"#utility.yul\":9400:9403   */\n      dup4\n        /* \"#utility.yul\":9341:9408   */\n      tag_166\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9334:9408   */\n      swap2\n      pop\n        /* \"#utility.yul\":9417:9510   */\n      tag_301\n        /* \"#utility.yul\":9506:9509   */\n      dup3\n        /* \"#utility.yul\":9417:9510   */\n      tag_191\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9535:9537   */\n      0x40\n        /* \"#utility.yul\":9530:9533   */\n      dup3\n        /* \"#utility.yul\":9526:9538   */\n      add\n        /* \"#utility.yul\":9519:9538   */\n      swap1\n      pop\n        /* \"#utility.yul\":9178:9544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9550:9969   */\n    tag_129:\n        /* \"#utility.yul\":9716:9720   */\n      0x00\n        /* \"#utility.yul\":9754:9756   */\n      0x20\n        /* \"#utility.yul\":9743:9752   */\n      dup3\n        /* \"#utility.yul\":9739:9757   */\n      add\n        /* \"#utility.yul\":9731:9757   */\n      swap1\n      pop\n        /* \"#utility.yul\":9803:9812   */\n      dup2\n        /* \"#utility.yul\":9797:9801   */\n      dup2\n        /* \"#utility.yul\":9793:9813   */\n      sub\n        /* \"#utility.yul\":9789:9790   */\n      0x00\n        /* \"#utility.yul\":9778:9787   */\n      dup4\n        /* \"#utility.yul\":9774:9791   */\n      add\n        /* \"#utility.yul\":9767:9814   */\n      mstore\n        /* \"#utility.yul\":9831:9962   */\n      tag_303\n        /* \"#utility.yul\":9957:9961   */\n      dup2\n        /* \"#utility.yul\":9831:9962   */\n      tag_192\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9823:9962   */\n      swap1\n      pop\n        /* \"#utility.yul\":9550:9969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9975:10154   */\n    tag_193:\n        /* \"#utility.yul\":10115:10146   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":10111:10112   */\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup3\n        /* \"#utility.yul\":10099:10113   */\n      add\n        /* \"#utility.yul\":10092:10147   */\n      mstore\n        /* \"#utility.yul\":9975:10154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10160:10526   */\n    tag_194:\n        /* \"#utility.yul\":10302:10305   */\n      0x00\n        /* \"#utility.yul\":10323:10390   */\n      tag_306\n        /* \"#utility.yul\":10387:10389   */\n      0x1d\n        /* \"#utility.yul\":10382:10385   */\n      dup4\n        /* \"#utility.yul\":10323:10390   */\n      tag_166\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10316:10390   */\n      swap2\n      pop\n        /* \"#utility.yul\":10399:10492   */\n      tag_307\n        /* \"#utility.yul\":10488:10491   */\n      dup3\n        /* \"#utility.yul\":10399:10492   */\n      tag_193\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10517:10519   */\n      0x20\n        /* \"#utility.yul\":10512:10515   */\n      dup3\n        /* \"#utility.yul\":10508:10520   */\n      add\n        /* \"#utility.yul\":10501:10520   */\n      swap1\n      pop\n        /* \"#utility.yul\":10160:10526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10532:10951   */\n    tag_136:\n        /* \"#utility.yul\":10698:10702   */\n      0x00\n        /* \"#utility.yul\":10736:10738   */\n      0x20\n        /* \"#utility.yul\":10725:10734   */\n      dup3\n        /* \"#utility.yul\":10721:10739   */\n      add\n        /* \"#utility.yul\":10713:10739   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10794   */\n      dup2\n        /* \"#utility.yul\":10779:10783   */\n      dup2\n        /* \"#utility.yul\":10775:10795   */\n      sub\n        /* \"#utility.yul\":10771:10772   */\n      0x00\n        /* \"#utility.yul\":10760:10769   */\n      dup4\n        /* \"#utility.yul\":10756:10773   */\n      add\n        /* \"#utility.yul\":10749:10796   */\n      mstore\n        /* \"#utility.yul\":10813:10944   */\n      tag_309\n        /* \"#utility.yul\":10939:10943   */\n      dup2\n        /* \"#utility.yul\":10813:10944   */\n      tag_194\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10805:10944   */\n      swap1\n      pop\n        /* \"#utility.yul\":10532:10951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10957:11181   */\n    tag_195:\n        /* \"#utility.yul\":11097:11131   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":11093:11094   */\n      0x00\n        /* \"#utility.yul\":11085:11091   */\n      dup3\n        /* \"#utility.yul\":11081:11095   */\n      add\n        /* \"#utility.yul\":11074:11132   */\n      mstore\n        /* \"#utility.yul\":11166:11173   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11161:11163   */\n      0x20\n        /* \"#utility.yul\":11153:11159   */\n      dup3\n        /* \"#utility.yul\":11149:11164   */\n      add\n        /* \"#utility.yul\":11142:11174   */\n      mstore\n        /* \"#utility.yul\":10957:11181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11187:11553   */\n    tag_196:\n        /* \"#utility.yul\":11329:11332   */\n      0x00\n        /* \"#utility.yul\":11350:11417   */\n      tag_312\n        /* \"#utility.yul\":11414:11416   */\n      0x25\n        /* \"#utility.yul\":11409:11412   */\n      dup4\n        /* \"#utility.yul\":11350:11417   */\n      tag_166\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11343:11417   */\n      swap2\n      pop\n        /* \"#utility.yul\":11426:11519   */\n      tag_313\n        /* \"#utility.yul\":11515:11518   */\n      dup3\n        /* \"#utility.yul\":11426:11519   */\n      tag_195\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11544:11546   */\n      0x40\n        /* \"#utility.yul\":11539:11542   */\n      dup3\n        /* \"#utility.yul\":11535:11547   */\n      add\n        /* \"#utility.yul\":11528:11547   */\n      swap1\n      pop\n        /* \"#utility.yul\":11187:11553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11559:11978   */\n    tag_141:\n        /* \"#utility.yul\":11725:11729   */\n      0x00\n        /* \"#utility.yul\":11763:11765   */\n      0x20\n        /* \"#utility.yul\":11752:11761   */\n      dup3\n        /* \"#utility.yul\":11748:11766   */\n      add\n        /* \"#utility.yul\":11740:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11812:11821   */\n      dup2\n        /* \"#utility.yul\":11806:11810   */\n      dup2\n        /* \"#utility.yul\":11802:11822   */\n      sub\n        /* \"#utility.yul\":11798:11799   */\n      0x00\n        /* \"#utility.yul\":11787:11796   */\n      dup4\n        /* \"#utility.yul\":11783:11800   */\n      add\n        /* \"#utility.yul\":11776:11823   */\n      mstore\n        /* \"#utility.yul\":11840:11971   */\n      tag_315\n        /* \"#utility.yul\":11966:11970   */\n      dup2\n        /* \"#utility.yul\":11840:11971   */\n      tag_196\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11832:11971   */\n      swap1\n      pop\n        /* \"#utility.yul\":11559:11978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11984:12206   */\n    tag_197:\n        /* \"#utility.yul\":12124:12158   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12120:12121   */\n      0x00\n        /* \"#utility.yul\":12112:12118   */\n      dup3\n        /* \"#utility.yul\":12108:12122   */\n      add\n        /* \"#utility.yul\":12101:12159   */\n      mstore\n        /* \"#utility.yul\":12193:12198   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12188:12190   */\n      0x20\n        /* \"#utility.yul\":12180:12186   */\n      dup3\n        /* \"#utility.yul\":12176:12191   */\n      add\n        /* \"#utility.yul\":12169:12199   */\n      mstore\n        /* \"#utility.yul\":11984:12206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12212:12578   */\n    tag_198:\n        /* \"#utility.yul\":12354:12357   */\n      0x00\n        /* \"#utility.yul\":12375:12442   */\n      tag_318\n        /* \"#utility.yul\":12439:12441   */\n      0x23\n        /* \"#utility.yul\":12434:12437   */\n      dup4\n        /* \"#utility.yul\":12375:12442   */\n      tag_166\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12368:12442   */\n      swap2\n      pop\n        /* \"#utility.yul\":12451:12544   */\n      tag_319\n        /* \"#utility.yul\":12540:12543   */\n      dup3\n        /* \"#utility.yul\":12451:12544   */\n      tag_197\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12569:12571   */\n      0x40\n        /* \"#utility.yul\":12564:12567   */\n      dup3\n        /* \"#utility.yul\":12560:12572   */\n      add\n        /* \"#utility.yul\":12553:12572   */\n      swap1\n      pop\n        /* \"#utility.yul\":12212:12578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12584:13003   */\n    tag_144:\n        /* \"#utility.yul\":12750:12754   */\n      0x00\n        /* \"#utility.yul\":12788:12790   */\n      0x20\n        /* \"#utility.yul\":12777:12786   */\n      dup3\n        /* \"#utility.yul\":12773:12791   */\n      add\n        /* \"#utility.yul\":12765:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12837:12846   */\n      dup2\n        /* \"#utility.yul\":12831:12835   */\n      dup2\n        /* \"#utility.yul\":12827:12847   */\n      sub\n        /* \"#utility.yul\":12823:12824   */\n      0x00\n        /* \"#utility.yul\":12812:12821   */\n      dup4\n        /* \"#utility.yul\":12808:12825   */\n      add\n        /* \"#utility.yul\":12801:12848   */\n      mstore\n        /* \"#utility.yul\":12865:12996   */\n      tag_321\n        /* \"#utility.yul\":12991:12995   */\n      dup2\n        /* \"#utility.yul\":12865:12996   */\n      tag_198\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12857:12996   */\n      swap1\n      pop\n        /* \"#utility.yul\":12584:13003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13009:13234   */\n    tag_199:\n        /* \"#utility.yul\":13149:13183   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13145:13146   */\n      0x00\n        /* \"#utility.yul\":13137:13143   */\n      dup3\n        /* \"#utility.yul\":13133:13147   */\n      add\n        /* \"#utility.yul\":13126:13184   */\n      mstore\n        /* \"#utility.yul\":13218:13226   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13213:13215   */\n      0x20\n        /* \"#utility.yul\":13205:13211   */\n      dup3\n        /* \"#utility.yul\":13201:13216   */\n      add\n        /* \"#utility.yul\":13194:13227   */\n      mstore\n        /* \"#utility.yul\":13009:13234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13240:13606   */\n    tag_200:\n        /* \"#utility.yul\":13382:13385   */\n      0x00\n        /* \"#utility.yul\":13403:13470   */\n      tag_324\n        /* \"#utility.yul\":13467:13469   */\n      0x26\n        /* \"#utility.yul\":13462:13465   */\n      dup4\n        /* \"#utility.yul\":13403:13470   */\n      tag_166\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":13396:13470   */\n      swap2\n      pop\n        /* \"#utility.yul\":13479:13572   */\n      tag_325\n        /* \"#utility.yul\":13568:13571   */\n      dup3\n        /* \"#utility.yul\":13479:13572   */\n      tag_199\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":13597:13599   */\n      0x40\n        /* \"#utility.yul\":13592:13595   */\n      dup3\n        /* \"#utility.yul\":13588:13600   */\n      add\n        /* \"#utility.yul\":13581:13600   */\n      swap1\n      pop\n        /* \"#utility.yul\":13240:13606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13612:14031   */\n    tag_149:\n        /* \"#utility.yul\":13778:13782   */\n      0x00\n        /* \"#utility.yul\":13816:13818   */\n      0x20\n        /* \"#utility.yul\":13805:13814   */\n      dup3\n        /* \"#utility.yul\":13801:13819   */\n      add\n        /* \"#utility.yul\":13793:13819   */\n      swap1\n      pop\n        /* \"#utility.yul\":13865:13874   */\n      dup2\n        /* \"#utility.yul\":13859:13863   */\n      dup2\n        /* \"#utility.yul\":13855:13875   */\n      sub\n        /* \"#utility.yul\":13851:13852   */\n      0x00\n        /* \"#utility.yul\":13840:13849   */\n      dup4\n        /* \"#utility.yul\":13836:13853   */\n      add\n        /* \"#utility.yul\":13829:13876   */\n      mstore\n        /* \"#utility.yul\":13893:14024   */\n      tag_327\n        /* \"#utility.yul\":14019:14023   */\n      dup2\n        /* \"#utility.yul\":13893:14024   */\n      tag_200\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":13885:14024   */\n      swap1\n      pop\n        /* \"#utility.yul\":13612:14031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14037:14257   */\n    tag_201:\n        /* \"#utility.yul\":14177:14211   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":14173:14174   */\n      0x00\n        /* \"#utility.yul\":14165:14171   */\n      dup3\n        /* \"#utility.yul\":14161:14175   */\n      add\n        /* \"#utility.yul\":14154:14212   */\n      mstore\n        /* \"#utility.yul\":14246:14249   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14241:14243   */\n      0x20\n        /* \"#utility.yul\":14233:14239   */\n      dup3\n        /* \"#utility.yul\":14229:14244   */\n      add\n        /* \"#utility.yul\":14222:14250   */\n      mstore\n        /* \"#utility.yul\":14037:14257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14263:14629   */\n    tag_202:\n        /* \"#utility.yul\":14405:14408   */\n      0x00\n        /* \"#utility.yul\":14426:14493   */\n      tag_330\n        /* \"#utility.yul\":14490:14492   */\n      0x21\n        /* \"#utility.yul\":14485:14488   */\n      dup4\n        /* \"#utility.yul\":14426:14493   */\n      tag_166\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":14419:14493   */\n      swap2\n      pop\n        /* \"#utility.yul\":14502:14595   */\n      tag_331\n        /* \"#utility.yul\":14591:14594   */\n      dup3\n        /* \"#utility.yul\":14502:14595   */\n      tag_201\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":14620:14622   */\n      0x40\n        /* \"#utility.yul\":14615:14618   */\n      dup3\n        /* \"#utility.yul\":14611:14623   */\n      add\n        /* \"#utility.yul\":14604:14623   */\n      swap1\n      pop\n        /* \"#utility.yul\":14263:14629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14635:15054   */\n    tag_156:\n        /* \"#utility.yul\":14801:14805   */\n      0x00\n        /* \"#utility.yul\":14839:14841   */\n      0x20\n        /* \"#utility.yul\":14828:14837   */\n      dup3\n        /* \"#utility.yul\":14824:14842   */\n      add\n        /* \"#utility.yul\":14816:14842   */\n      swap1\n      pop\n        /* \"#utility.yul\":14888:14897   */\n      dup2\n        /* \"#utility.yul\":14882:14886   */\n      dup2\n        /* \"#utility.yul\":14878:14898   */\n      sub\n        /* \"#utility.yul\":14874:14875   */\n      0x00\n        /* \"#utility.yul\":14863:14872   */\n      dup4\n        /* \"#utility.yul\":14859:14876   */\n      add\n        /* \"#utility.yul\":14852:14899   */\n      mstore\n        /* \"#utility.yul\":14916:15047   */\n      tag_333\n        /* \"#utility.yul\":15042:15046   */\n      dup2\n        /* \"#utility.yul\":14916:15047   */\n      tag_202\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":14908:15047   */\n      swap1\n      pop\n        /* \"#utility.yul\":14635:15054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15060:15281   */\n    tag_203:\n        /* \"#utility.yul\":15200:15234   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":15196:15197   */\n      0x00\n        /* \"#utility.yul\":15188:15194   */\n      dup3\n        /* \"#utility.yul\":15184:15198   */\n      add\n        /* \"#utility.yul\":15177:15235   */\n      mstore\n        /* \"#utility.yul\":15269:15273   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15264:15266   */\n      0x20\n        /* \"#utility.yul\":15256:15262   */\n      dup3\n        /* \"#utility.yul\":15252:15267   */\n      add\n        /* \"#utility.yul\":15245:15274   */\n      mstore\n        /* \"#utility.yul\":15060:15281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15287:15653   */\n    tag_204:\n        /* \"#utility.yul\":15429:15432   */\n      0x00\n        /* \"#utility.yul\":15450:15517   */\n      tag_336\n        /* \"#utility.yul\":15514:15516   */\n      0x22\n        /* \"#utility.yul\":15509:15512   */\n      dup4\n        /* \"#utility.yul\":15450:15517   */\n      tag_166\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":15443:15517   */\n      swap2\n      pop\n        /* \"#utility.yul\":15526:15619   */\n      tag_337\n        /* \"#utility.yul\":15615:15618   */\n      dup3\n        /* \"#utility.yul\":15526:15619   */\n      tag_203\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":15644:15646   */\n      0x40\n        /* \"#utility.yul\":15639:15642   */\n      dup3\n        /* \"#utility.yul\":15635:15647   */\n      add\n        /* \"#utility.yul\":15628:15647   */\n      swap1\n      pop\n        /* \"#utility.yul\":15287:15653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15659:16078   */\n    tag_160:\n        /* \"#utility.yul\":15825:15829   */\n      0x00\n        /* \"#utility.yul\":15863:15865   */\n      0x20\n        /* \"#utility.yul\":15852:15861   */\n      dup3\n        /* \"#utility.yul\":15848:15866   */\n      add\n        /* \"#utility.yul\":15840:15866   */\n      swap1\n      pop\n        /* \"#utility.yul\":15912:15921   */\n      dup2\n        /* \"#utility.yul\":15906:15910   */\n      dup2\n        /* \"#utility.yul\":15902:15922   */\n      sub\n        /* \"#utility.yul\":15898:15899   */\n      0x00\n        /* \"#utility.yul\":15887:15896   */\n      dup4\n        /* \"#utility.yul\":15883:15900   */\n      add\n        /* \"#utility.yul\":15876:15923   */\n      mstore\n        /* \"#utility.yul\":15940:16071   */\n      tag_339\n        /* \"#utility.yul\":16066:16070   */\n      dup2\n        /* \"#utility.yul\":15940:16071   */\n      tag_204\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":15932:16071   */\n      swap1\n      pop\n        /* \"#utility.yul\":15659:16078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c91727b3c63a3b1df38eebcbd8494ecef22aeb5360deddeea02d036244f299ec64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506115678061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a578063a457c2d711610064578063a457c2d71461025c578063a9059cbb1461028c578063d5abeb01146102bc578063dd62ed3e146102da576100e8565b806370a08231146101f257806379cc67901461022257806395d89b411461023e576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806339509351146101a657806342966c68146101d6576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f461030a565b6040516101019190610d3a565b60405180910390f35b610124600480360381019061011f9190610deb565b61039a565b6040516101319190610e43565b60405180910390f35b6101426103b0565b60405161014f9190610e6b565b60405180910390f35b610172600480360381019061016d9190610e84565b6103b9565b60405161017f9190610e43565b60405180910390f35b6101906103db565b60405161019d9190610eef565b60405180910390f35b6101c060048036038101906101bb9190610deb565b6103f0565b6040516101cd9190610e43565b60405180910390f35b6101f060048036038101906101eb9190610f08565b61041f565b005b61020c60048036038101906102079190610f33565b61042c565b6040516102199190610e6b565b60405180910390f35b61023c60048036038101906102379190610deb565b610471565b005b61024661048a565b6040516102539190610d3a565b60405180910390f35b61027660048036038101906102719190610deb565b61051a565b6040516102839190610e43565b60405180910390f35b6102a660048036038101906102a19190610deb565b610588565b6040516102b39190610e43565b60405180910390f35b6102c461059e565b6040516102d19190610e6b565b60405180910390f35b6102f460048036038101906102ef9190610f5e565b6105a7565b6040516103019190610e6b565b60405180910390f35b60606004805461031990610fc9565b80601f016020809104026020016040519081016040528092919081815260200182805461034590610fc9565b80156103905780601f1061036757610100808354040283529160200191610390565b820191905f5260205f20905b81548152906001019060200180831161037357829003601f168201915b5050505050905090565b5f6103a6338484610629565b6001905092915050565b5f600254905090565b5f6103c58433846107ec565b6103d0848484610877565b600190509392505050565b5f60065f9054906101000a900460ff16905090565b5f8033905061041481858561040585896105a7565b61040f9190611026565b610629565b600191505092915050565b6104293382610ae3565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61047c8233836107ec565b6104868282610ae3565b5050565b60606005805461049990610fc9565b80601f01602080910402602001604051908101604052809291908181526020018280546104c590610fc9565b80156105105780601f106104e757610100808354040283529160200191610510565b820191905f5260205f20905b8154815290600101906020018083116104f357829003601f168201915b5050505050905090565b5f803390505f61052a82866105a7565b90508381101561056f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610566906110c9565b60405180910390fd5b61057c8286868403610629565b60019250505092915050565b5f610594338484610877565b6001905092915050565b5f600354905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e90611157565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc906111e5565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107df9190610e6b565b60405180910390a3505050565b5f6107f784846105a7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108715781811015610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a9061124d565b60405180910390fd5b6108708484848403610629565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc906112db565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90611369565b60405180910390fd5b61095e838383610ca6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906113f7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aca9190610e6b565b60405180910390a3610add848484610cab565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4890611485565b60405180910390fd5b610b5c825f83610ca6565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd690611513565b60405180910390fd5b8181035f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160025f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c8e9190610e6b565b60405180910390a3610ca1835f84610cab565b505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ce7578082015181840152602081019050610ccc565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610d0c82610cb0565b610d168185610cba565b9350610d26818560208601610cca565b610d2f81610cf2565b840191505092915050565b5f6020820190508181035f830152610d528184610d02565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d8782610d5e565b9050919050565b610d9781610d7d565b8114610da1575f80fd5b50565b5f81359050610db281610d8e565b92915050565b5f819050919050565b610dca81610db8565b8114610dd4575f80fd5b50565b5f81359050610de581610dc1565b92915050565b5f8060408385031215610e0157610e00610d5a565b5b5f610e0e85828601610da4565b9250506020610e1f85828601610dd7565b9150509250929050565b5f8115159050919050565b610e3d81610e29565b82525050565b5f602082019050610e565f830184610e34565b92915050565b610e6581610db8565b82525050565b5f602082019050610e7e5f830184610e5c565b92915050565b5f805f60608486031215610e9b57610e9a610d5a565b5b5f610ea886828701610da4565b9350506020610eb986828701610da4565b9250506040610eca86828701610dd7565b9150509250925092565b5f60ff82169050919050565b610ee981610ed4565b82525050565b5f602082019050610f025f830184610ee0565b92915050565b5f60208284031215610f1d57610f1c610d5a565b5b5f610f2a84828501610dd7565b91505092915050565b5f60208284031215610f4857610f47610d5a565b5b5f610f5584828501610da4565b91505092915050565b5f8060408385031215610f7457610f73610d5a565b5b5f610f8185828601610da4565b9250506020610f9285828601610da4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fe057607f821691505b602082108103610ff357610ff2610f9c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61103082610db8565b915061103b83610db8565b925082820190508082111561105357611052610ff9565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f6110b3602583610cba565b91506110be82611059565b604082019050919050565b5f6020820190508181035f8301526110e0816110a7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611141602483610cba565b915061114c826110e7565b604082019050919050565b5f6020820190508181035f83015261116e81611135565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6111cf602283610cba565b91506111da82611175565b604082019050919050565b5f6020820190508181035f8301526111fc816111c3565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f611237601d83610cba565b915061124282611203565b602082019050919050565b5f6020820190508181035f8301526112648161122b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6112c5602583610cba565b91506112d08261126b565b604082019050919050565b5f6020820190508181035f8301526112f2816112b9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611353602383610cba565b915061135e826112f9565b604082019050919050565b5f6020820190508181035f83015261138081611347565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f6113e1602683610cba565b91506113ec82611387565b604082019050919050565b5f6020820190508181035f83015261140e816113d5565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61146f602183610cba565b915061147a82611415565b604082019050919050565b5f6020820190508181035f83015261149c81611463565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f6114fd602283610cba565b9150611508826114a3565b604082019050919050565b5f6020820190508181035f83015261152a816114f1565b905091905056fea2646970667358221220c91727b3c63a3b1df38eebcbd8494ecef22aeb5360deddeea02d036244f299ec64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1567 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23E JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x319 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x345 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x390 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x367 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x390 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x373 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C5 DUP5 CALLER DUP5 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x3D0 DUP5 DUP5 DUP5 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x414 DUP2 DUP6 DUP6 PUSH2 0x405 DUP6 DUP10 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x429 CALLER DUP3 PUSH2 0xAE3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47C DUP3 CALLER DUP4 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x486 DUP3 DUP3 PUSH2 0xAE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C5 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x510 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x510 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH0 PUSH2 0x52A DUP3 DUP7 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x594 CALLER DUP5 DUP5 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP1 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x705 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FC SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F7 DUP5 DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x871 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP1 PUSH2 0x124D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x870 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x629 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DC SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95E DUP4 DUP4 DUP4 PUSH2 0xCA6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xACA SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xADD DUP5 DUP5 DUP5 PUSH2 0xCAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C DUP3 PUSH0 DUP4 PUSH2 0xCA6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCA1 DUP4 PUSH0 DUP5 PUSH2 0xCAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCCC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD0C DUP3 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xD16 DUP2 DUP6 PUSH2 0xCBA JUMP JUMPDEST SWAP4 POP PUSH2 0xD26 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xD2F DUP2 PUSH2 0xCF2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD52 DUP2 DUP5 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD87 DUP3 PUSH2 0xD5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0xD7D JUMP JUMPDEST DUP2 EQ PUSH2 0xDA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB2 DUP2 PUSH2 0xD8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCA DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE5 DUP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE01 JUMPI PUSH2 0xE00 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0E DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1F DUP6 DUP3 DUP7 ADD PUSH2 0xDD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3D DUP2 PUSH2 0xE29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE56 PUSH0 DUP4 ADD DUP5 PUSH2 0xE34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE65 DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7E PUSH0 DUP4 ADD DUP5 PUSH2 0xE5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9A PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA8 DUP7 DUP3 DUP8 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEB9 DUP7 DUP3 DUP8 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xECA DUP7 DUP3 DUP8 ADD PUSH2 0xDD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE9 DUP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2A DUP5 DUP3 DUP6 ADD PUSH2 0xDD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF48 JUMPI PUSH2 0xF47 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF55 DUP5 DUP3 DUP6 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF74 JUMPI PUSH2 0xF73 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF81 DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF92 DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFE0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0xF9C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1030 DUP3 PUSH2 0xDB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x103B DUP4 PUSH2 0xDB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0xFF9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10B3 PUSH1 0x25 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x10BE DUP3 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10E0 DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1141 PUSH1 0x24 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x114C DUP3 PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x116E DUP2 PUSH2 0x1135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CF PUSH1 0x22 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x11DA DUP3 PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FC DUP2 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1237 PUSH1 0x1D DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x1242 DUP3 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C5 PUSH1 0x25 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x12D0 DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F2 DUP2 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1353 PUSH1 0x23 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x135E DUP3 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1380 DUP2 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 PUSH1 0x26 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x13EC DUP3 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x140E DUP2 PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x146F PUSH1 0x21 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x147A DUP3 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149C DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14FD PUSH1 0x22 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x1508 DUP3 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152A DUP2 PUSH2 0x14F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 OR 0x27 0xB3 0xC6 GASPRICE EXTCODESIZE SAR RETURN DUP15 0xEB 0xCB 0xD8 0x49 0x4E 0xCE CALLCODE 0x2A 0xEB MSTORE8 PUSH1 0xDE 0xDD 0xEE LOG0 0x2D SUB PUSH3 0x44F299 0xEC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "199:5928:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_975": {
									"entryPoint": 3243,
									"id": 975,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_913": {
									"entryPoint": 1577,
									"id": 913,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_965": {
									"entryPoint": 3238,
									"id": 965,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_869": {
									"entryPoint": 2787,
									"id": 869,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_955": {
									"entryPoint": 2028,
									"id": 955,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_733": {
									"entryPoint": 2167,
									"id": 733,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_509": {
									"entryPoint": 1447,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_529": {
									"entryPoint": 922,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_472": {
									"entryPoint": 1068,
									"id": 472,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_657": {
									"entryPoint": 1137,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_637": {
									"entryPoint": 1055,
									"id": 637,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_442": {
									"entryPoint": 987,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_625": {
									"entryPoint": 1306,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_585": {
									"entryPoint": 1008,
									"id": 585,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxSupply_459": {
									"entryPoint": 1438,
									"id": 459,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_424": {
									"entryPoint": 778,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_433": {
									"entryPoint": 1162,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_451": {
									"entryPoint": 944,
									"id": 451,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_557": {
									"entryPoint": 953,
									"id": 557,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_492": {
									"entryPoint": 1416,
									"id": 492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16081:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:4",
														"type": ""
													}
												],
												"src": "7:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:4",
														"type": ""
													}
												],
												"src": "112:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:4",
																"statements": []
															},
															"src": "378:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:4",
														"type": ""
													}
												],
												"src": "287:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:4",
														"type": ""
													}
												],
												"src": "539:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:4",
														"type": ""
													}
												],
												"src": "647:377:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:4",
														"type": ""
													}
												],
												"src": "1030:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:4",
														"type": ""
													}
												],
												"src": "1349:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:4",
														"type": ""
													}
												],
												"src": "1676:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:4",
														"type": ""
													}
												],
												"src": "1808:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:4"
															},
															"nodeType": "YulIf",
															"src": "1963:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:4",
														"type": ""
													}
												],
												"src": "1910:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:4",
														"type": ""
													}
												],
												"src": "2038:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:4",
														"type": ""
													}
												],
												"src": "2183:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:4"
															},
															"nodeType": "YulIf",
															"src": "2319:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:4",
														"type": ""
													}
												],
												"src": "2266:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:4",
														"type": ""
													}
												],
												"src": "2394:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:4"
															},
															"nodeType": "YulIf",
															"src": "2632:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:4",
														"type": ""
													}
												],
												"src": "2539:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:4",
														"type": ""
													}
												],
												"src": "3019:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:4",
														"type": ""
													}
												],
												"src": "3115:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:4",
														"type": ""
													}
												],
												"src": "3230:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:4",
														"type": ""
													}
												],
												"src": "3446:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:4",
														"type": ""
													}
												],
												"src": "3570:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:4"
															},
															"nodeType": "YulIf",
															"src": "3908:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:4",
														"type": ""
													}
												],
												"src": "3798:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:4",
														"type": ""
													}
												],
												"src": "4423:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:4",
														"type": ""
													}
												],
												"src": "4515:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:4",
														"type": ""
													}
												],
												"src": "4633:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:4"
															},
															"nodeType": "YulIf",
															"src": "4929:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:4",
														"type": ""
													}
												],
												"src": "4853:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:4"
															},
															"nodeType": "YulIf",
															"src": "5264:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:4",
														"type": ""
													}
												],
												"src": "5188:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5652:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:32:4"
															},
															"nodeType": "YulIf",
															"src": "5616:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5745:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5789:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5872:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5887:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5891:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5917:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5952:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5963:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5948:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5948:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5972:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5927:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5917:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5568:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5579:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5591:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5599:6:4",
														"type": ""
													}
												],
												"src": "5523:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6031:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6041:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6148:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6169:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6003:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6240:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6250:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6264:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6270:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6260:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6250:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6281:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6311:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6317:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6285:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6358:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6372:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6386:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6394:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6382:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6382:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6372:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6338:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:26:4"
															},
															"nodeType": "YulIf",
															"src": "6328:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6461:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6475:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6475:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6475:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6425:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6445:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6422:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:38:4"
															},
															"nodeType": "YulIf",
															"src": "6419:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6224:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6233:6:4",
														"type": ""
													}
												],
												"src": "6189:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6563:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6553:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6650:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6681:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6515:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6745:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6755:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6778:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6760:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6755:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6789:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6794:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6834:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6837:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6863:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6865:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6865:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6865:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6855:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6858:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6852:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6852:10:4"
															},
															"nodeType": "YulIf",
															"src": "6849:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6732:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6735:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6741:3:4",
														"type": ""
													}
												],
												"src": "6701:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7004:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7026:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7022:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7022:14:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7038:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7015:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7015:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7094:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:15:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7107:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7083:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7083:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6996:6:4",
														"type": ""
													}
												],
												"src": "6898:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7274:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7284:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7355:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7291:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7456:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7367:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7367:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7367:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7469:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7480:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7476:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7469:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7262:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7270:3:4",
														"type": ""
													}
												],
												"src": "7128:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7671:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7681:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7689:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7681:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7739:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7724:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7747:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7753:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7717:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7717:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7773:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7907:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7781:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7651:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7666:4:4",
														"type": ""
													}
												],
												"src": "7500:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8031:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8053:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8061:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8049:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8065:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8042:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8121:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8129:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8117:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8117:15:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8134:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8110:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8023:6:4",
														"type": ""
													}
												],
												"src": "7925:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8300:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8310:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8376:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8381:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8317:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8482:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8393:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8393:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8495:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8506:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8511:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8288:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8296:3:4",
														"type": ""
													}
												],
												"src": "8154:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8697:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8707:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8719:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8730:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8715:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8707:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8754:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8765:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8750:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8750:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8773:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8779:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8769:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8743:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8743:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8743:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8933:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8807:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8677:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8692:4:4",
														"type": ""
													}
												],
												"src": "8526:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9079:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9087:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9075:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9091:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9068:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9068:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9068:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9147:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9155:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9143:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9143:15:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9160:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9136:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9136:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9049:6:4",
														"type": ""
													}
												],
												"src": "8951:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9324:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9334:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9400:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9405:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9334:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9506:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9417:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9519:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9530:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9535:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9526:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9519:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9312:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9320:3:4",
														"type": ""
													}
												],
												"src": "9178:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9721:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9731:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9743:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9754:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9739:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9731:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9778:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9789:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9774:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9774:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9797:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9803:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9793:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9793:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9767:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9767:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9767:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9823:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9957:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9831:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9831:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9823:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9701:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9716:4:4",
														"type": ""
													}
												],
												"src": "9550:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10081:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10103:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10111:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10099:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10099:14:4"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10115:31:4",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10092:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10092:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10092:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10073:6:4",
														"type": ""
													}
												],
												"src": "9975:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10306:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10316:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10382:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10387:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10323:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10323:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10488:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10399:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10399:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10501:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10512:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10517:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10501:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10294:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10302:3:4",
														"type": ""
													}
												],
												"src": "10160:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10703:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10713:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10725:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10721:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10713:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10779:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10785:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10775:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10805:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10939:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10813:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10813:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10805:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10683:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10698:4:4",
														"type": ""
													}
												],
												"src": "10532:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11063:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11085:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11093:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11081:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11081:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11097:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11074:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11153:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11161:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11149:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11149:15:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11166:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11142:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11142:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11142:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11055:6:4",
														"type": ""
													}
												],
												"src": "10957:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11333:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11343:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11409:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11414:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11350:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11350:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11343:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11515:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11426:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11426:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11426:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11544:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11321:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11329:3:4",
														"type": ""
													}
												],
												"src": "11187:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11730:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11740:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11752:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11740:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11798:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11783:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11806:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11812:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11802:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11802:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11776:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11776:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11832:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11966:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11840:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11832:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11710:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11725:4:4",
														"type": ""
													}
												],
												"src": "11559:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12090:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12112:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12120:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12108:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12108:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12124:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12101:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12101:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12101:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12180:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12188:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12176:15:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12193:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12169:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12169:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12082:6:4",
														"type": ""
													}
												],
												"src": "11984:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12358:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12368:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12434:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12375:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12368:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12540:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12451:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12451:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12451:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12553:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12564:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12569:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12560:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12560:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12553:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12346:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12354:3:4",
														"type": ""
													}
												],
												"src": "12212:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12755:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12765:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12777:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12773:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12773:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12765:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12812:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12823:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12808:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12808:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12831:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12837:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12827:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12827:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12801:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12801:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12801:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12857:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12991:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12865:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12865:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12857:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12735:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12750:4:4",
														"type": ""
													}
												],
												"src": "12584:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13115:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13137:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13145:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13133:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13133:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13149:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13126:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13126:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13205:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13213:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13201:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13201:15:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13218:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13194:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13194:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13194:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13107:6:4",
														"type": ""
													}
												],
												"src": "13009:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13386:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13396:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13462:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13467:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13403:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13403:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13396:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13568:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13479:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13479:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13581:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13592:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13597:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13588:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13581:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13374:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13382:3:4",
														"type": ""
													}
												],
												"src": "13240:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13783:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13793:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13805:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13801:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13793:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13840:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13851:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13836:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13836:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13859:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13865:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13855:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13855:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13829:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13829:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13829:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13885:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14019:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13893:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13885:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13763:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13778:4:4",
														"type": ""
													}
												],
												"src": "13612:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14143:114:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14165:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14173:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14161:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14161:14:4"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14177:34:4",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14154:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14233:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14241:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14229:15:4"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14246:3:4",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14222:28:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14222:28:4"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14135:6:4",
														"type": ""
													}
												],
												"src": "14037:220:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14409:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14419:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14485:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14490:2:4",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14426:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14426:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14591:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nodeType": "YulIdentifier",
																	"src": "14502:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14502:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14502:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14604:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14615:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14620:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14611:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14611:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14604:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14397:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14405:3:4",
														"type": ""
													}
												],
												"src": "14263:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14806:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14816:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14828:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14839:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14824:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14824:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14816:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14863:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14874:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14859:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14859:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14882:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14888:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14878:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14878:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14852:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14852:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14852:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14908:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15042:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14916:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14916:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14908:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14786:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14801:4:4",
														"type": ""
													}
												],
												"src": "14635:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15166:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15188:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15196:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15184:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15184:14:4"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15200:34:4",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15177:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15177:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15177:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15256:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15264:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15252:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15252:15:4"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15269:4:4",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15245:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15245:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15245:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15158:6:4",
														"type": ""
													}
												],
												"src": "15060:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15433:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15443:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15509:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15514:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15450:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15450:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15443:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15615:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"nodeType": "YulIdentifier",
																	"src": "15526:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15526:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15526:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15628:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15639:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15644:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15635:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15635:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15628:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15421:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15429:3:4",
														"type": ""
													}
												],
												"src": "15287:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15830:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15840:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15852:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15863:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15848:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15848:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15840:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15887:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15898:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15883:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15883:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15906:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15912:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15902:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15902:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15876:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15876:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15876:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15932:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16066:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15940:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15940:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15932:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15810:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15825:4:4",
														"type": ""
													}
												],
												"src": "15659:419:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a578063a457c2d711610064578063a457c2d71461025c578063a9059cbb1461028c578063d5abeb01146102bc578063dd62ed3e146102da576100e8565b806370a08231146101f257806379cc67901461022257806395d89b411461023e576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806339509351146101a657806342966c68146101d6576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f461030a565b6040516101019190610d3a565b60405180910390f35b610124600480360381019061011f9190610deb565b61039a565b6040516101319190610e43565b60405180910390f35b6101426103b0565b60405161014f9190610e6b565b60405180910390f35b610172600480360381019061016d9190610e84565b6103b9565b60405161017f9190610e43565b60405180910390f35b6101906103db565b60405161019d9190610eef565b60405180910390f35b6101c060048036038101906101bb9190610deb565b6103f0565b6040516101cd9190610e43565b60405180910390f35b6101f060048036038101906101eb9190610f08565b61041f565b005b61020c60048036038101906102079190610f33565b61042c565b6040516102199190610e6b565b60405180910390f35b61023c60048036038101906102379190610deb565b610471565b005b61024661048a565b6040516102539190610d3a565b60405180910390f35b61027660048036038101906102719190610deb565b61051a565b6040516102839190610e43565b60405180910390f35b6102a660048036038101906102a19190610deb565b610588565b6040516102b39190610e43565b60405180910390f35b6102c461059e565b6040516102d19190610e6b565b60405180910390f35b6102f460048036038101906102ef9190610f5e565b6105a7565b6040516103019190610e6b565b60405180910390f35b60606004805461031990610fc9565b80601f016020809104026020016040519081016040528092919081815260200182805461034590610fc9565b80156103905780601f1061036757610100808354040283529160200191610390565b820191905f5260205f20905b81548152906001019060200180831161037357829003601f168201915b5050505050905090565b5f6103a6338484610629565b6001905092915050565b5f600254905090565b5f6103c58433846107ec565b6103d0848484610877565b600190509392505050565b5f60065f9054906101000a900460ff16905090565b5f8033905061041481858561040585896105a7565b61040f9190611026565b610629565b600191505092915050565b6104293382610ae3565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61047c8233836107ec565b6104868282610ae3565b5050565b60606005805461049990610fc9565b80601f01602080910402602001604051908101604052809291908181526020018280546104c590610fc9565b80156105105780601f106104e757610100808354040283529160200191610510565b820191905f5260205f20905b8154815290600101906020018083116104f357829003601f168201915b5050505050905090565b5f803390505f61052a82866105a7565b90508381101561056f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610566906110c9565b60405180910390fd5b61057c8286868403610629565b60019250505092915050565b5f610594338484610877565b6001905092915050565b5f600354905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e90611157565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc906111e5565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107df9190610e6b565b60405180910390a3505050565b5f6107f784846105a7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108715781811015610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a9061124d565b60405180910390fd5b6108708484848403610629565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc906112db565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90611369565b60405180910390fd5b61095e838383610ca6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906113f7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aca9190610e6b565b60405180910390a3610add848484610cab565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4890611485565b60405180910390fd5b610b5c825f83610ca6565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd690611513565b60405180910390fd5b8181035f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160025f82825403925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c8e9190610e6b565b60405180910390a3610ca1835f84610cab565b505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ce7578082015181840152602081019050610ccc565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610d0c82610cb0565b610d168185610cba565b9350610d26818560208601610cca565b610d2f81610cf2565b840191505092915050565b5f6020820190508181035f830152610d528184610d02565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d8782610d5e565b9050919050565b610d9781610d7d565b8114610da1575f80fd5b50565b5f81359050610db281610d8e565b92915050565b5f819050919050565b610dca81610db8565b8114610dd4575f80fd5b50565b5f81359050610de581610dc1565b92915050565b5f8060408385031215610e0157610e00610d5a565b5b5f610e0e85828601610da4565b9250506020610e1f85828601610dd7565b9150509250929050565b5f8115159050919050565b610e3d81610e29565b82525050565b5f602082019050610e565f830184610e34565b92915050565b610e6581610db8565b82525050565b5f602082019050610e7e5f830184610e5c565b92915050565b5f805f60608486031215610e9b57610e9a610d5a565b5b5f610ea886828701610da4565b9350506020610eb986828701610da4565b9250506040610eca86828701610dd7565b9150509250925092565b5f60ff82169050919050565b610ee981610ed4565b82525050565b5f602082019050610f025f830184610ee0565b92915050565b5f60208284031215610f1d57610f1c610d5a565b5b5f610f2a84828501610dd7565b91505092915050565b5f60208284031215610f4857610f47610d5a565b5b5f610f5584828501610da4565b91505092915050565b5f8060408385031215610f7457610f73610d5a565b5b5f610f8185828601610da4565b9250506020610f9285828601610da4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fe057607f821691505b602082108103610ff357610ff2610f9c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61103082610db8565b915061103b83610db8565b925082820190508082111561105357611052610ff9565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f6110b3602583610cba565b91506110be82611059565b604082019050919050565b5f6020820190508181035f8301526110e0816110a7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f611141602483610cba565b915061114c826110e7565b604082019050919050565b5f6020820190508181035f83015261116e81611135565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6111cf602283610cba565b91506111da82611175565b604082019050919050565b5f6020820190508181035f8301526111fc816111c3565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f611237601d83610cba565b915061124282611203565b602082019050919050565b5f6020820190508181035f8301526112648161122b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f6112c5602583610cba565b91506112d08261126b565b604082019050919050565b5f6020820190508181035f8301526112f2816112b9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611353602383610cba565b915061135e826112f9565b604082019050919050565b5f6020820190508181035f83015261138081611347565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f6113e1602683610cba565b91506113ec82611387565b604082019050919050565b5f6020820190508181035f83015261140e816113d5565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f61146f602183610cba565b915061147a82611415565b604082019050919050565b5f6020820190508181035f83015261149c81611463565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e5f8201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b5f6114fd602283610cba565b9150611508826114a3565b604082019050919050565b5f6020820190508181035f83015261152a816114f1565b905091905056fea2646970667358221220c91727b3c63a3b1df38eebcbd8494ecef22aeb5360deddeea02d036244f299ec64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23E JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x319 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x345 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x390 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x367 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x390 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x373 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C5 DUP5 CALLER DUP5 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x3D0 DUP5 DUP5 DUP5 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH2 0x414 DUP2 DUP6 DUP6 PUSH2 0x405 DUP6 DUP10 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x429 CALLER DUP3 PUSH2 0xAE3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47C DUP3 CALLER DUP4 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x486 DUP3 DUP3 PUSH2 0xAE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C5 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x510 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x510 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH0 PUSH2 0x52A DUP3 DUP7 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x594 CALLER DUP5 DUP5 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP1 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x705 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FC SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F7 DUP5 DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x871 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP1 PUSH2 0x124D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x870 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x629 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DC SWAP1 PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP1 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95E DUP4 DUP4 DUP4 PUSH2 0xCA6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xACA SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xADD DUP5 DUP5 DUP5 PUSH2 0xCAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C DUP3 PUSH0 DUP4 PUSH2 0xCA6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCA1 DUP4 PUSH0 DUP5 PUSH2 0xCAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCCC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD0C DUP3 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xD16 DUP2 DUP6 PUSH2 0xCBA JUMP JUMPDEST SWAP4 POP PUSH2 0xD26 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xD2F DUP2 PUSH2 0xCF2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD52 DUP2 DUP5 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD87 DUP3 PUSH2 0xD5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0xD7D JUMP JUMPDEST DUP2 EQ PUSH2 0xDA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB2 DUP2 PUSH2 0xD8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCA DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE5 DUP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE01 JUMPI PUSH2 0xE00 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0E DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1F DUP6 DUP3 DUP7 ADD PUSH2 0xDD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3D DUP2 PUSH2 0xE29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE56 PUSH0 DUP4 ADD DUP5 PUSH2 0xE34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE65 DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7E PUSH0 DUP4 ADD DUP5 PUSH2 0xE5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9A PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA8 DUP7 DUP3 DUP8 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEB9 DUP7 DUP3 DUP8 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xECA DUP7 DUP3 DUP8 ADD PUSH2 0xDD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE9 DUP2 PUSH2 0xED4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF02 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH2 0xF1C PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2A DUP5 DUP3 DUP6 ADD PUSH2 0xDD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF48 JUMPI PUSH2 0xF47 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF55 DUP5 DUP3 DUP6 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF74 JUMPI PUSH2 0xF73 PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF81 DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF92 DUP6 DUP3 DUP7 ADD PUSH2 0xDA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFE0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0xF9C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1030 DUP3 PUSH2 0xDB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x103B DUP4 PUSH2 0xDB8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0xFF9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10B3 PUSH1 0x25 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x10BE DUP3 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10E0 DUP2 PUSH2 0x10A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1141 PUSH1 0x24 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x114C DUP3 PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x116E DUP2 PUSH2 0x1135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CF PUSH1 0x22 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x11DA DUP3 PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FC DUP2 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1237 PUSH1 0x1D DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x1242 DUP3 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C5 PUSH1 0x25 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x12D0 DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F2 DUP2 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1353 PUSH1 0x23 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x135E DUP3 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1380 DUP2 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 PUSH1 0x26 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x13EC DUP3 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x140E DUP2 PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x146F PUSH1 0x21 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x147A DUP3 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149C DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14FD PUSH1 0x22 DUP4 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH2 0x1508 DUP3 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x152A DUP2 PUSH2 0x14F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 OR 0x27 0xB3 0xC6 GASPRICE EXTCODESIZE SAR RETURN DUP15 0xEB 0xCB 0xD8 0x49 0x4E 0xCE CALLCODE 0x2A 0xEB MSTORE8 PUSH1 0xDE 0xDD 0xEE LOG0 0x2D SUB PUSH3 0x44F299 0xEC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "199:5928:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1792:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1133:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2856:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1344:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2949:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;921:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2425:425;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1475:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1245:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1637:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;817:98;871:13;903:5;896:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:98;:::o;1792:164::-;1875:4;1891:37;1900:10;1912:7;1921:6;1891:8;:37::i;:::-;1945:4;1938:11;;1792:164;;;;:::o;1133:106::-;1194:7;1220:12;;1213:19;;1133:106;:::o;1962:219::-;2059:4;2075:41;2091:4;2097:10;2109:6;2075:15;:41::i;:::-;2126:27;2136:4;2142:2;2146:6;2126:9;:27::i;:::-;2170:4;2163:11;;1962:219;;;;;:::o;1029:98::-;1087:5;1111:9;;;;;;;;;;;1104:16;;1029:98;:::o;2187:232::-;2275:4;2291:13;2307:10;2291:26;;2327:64;2336:5;2343:7;2380:10;2352:25;2362:5;2369:7;2352:9;:25::i;:::-;:38;;;;:::i;:::-;2327:8;:64::i;:::-;2408:4;2401:11;;;2187:232;;;;:::o;2856:87::-;2911:25;2917:10;2929:6;2911:5;:25::i;:::-;2856:87;:::o;1344:125::-;1418:7;1444:9;:18;1454:7;1444:18;;;;;;;;;;;;;;;;1437:25;;1344:125;;;:::o;2949:159::-;3025:44;3041:7;3050:10;3062:6;3025:15;:44::i;:::-;3079:22;3085:7;3094:6;3079:5;:22::i;:::-;2949:159;;:::o;921:102::-;977:13;1009:7;1002:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:102;:::o;2425:425::-;2518:4;2534:13;2550:10;2534:26;;2570:24;2597:25;2607:5;2614:7;2597:9;:25::i;:::-;2570:52;;2660:15;2640:16;:35;;2632:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2751:60;2760:5;2767:7;2795:15;2776:16;:34;2751:8;:60::i;:::-;2839:4;2832:11;;;;2425:425;;;;:::o;1475:156::-;1554:4;1570:33;1580:10;1592:2;1596:6;1570:9;:33::i;:::-;1620:4;1613:11;;1475:156;;;;:::o;1245:93::-;1295:7;1321:10;;1314:17;;1245:93;:::o;1637:149::-;1726:7;1752:11;:18;1764:5;1752:18;;;;;;;;;;;;;;;:27;1771:7;1752:27;;;;;;;;;;;;;;;;1745:34;;1637:149;;;;:::o;5175:340::-;5293:1;5276:19;;:5;:19;;;5268:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5373:1;5354:21;;:7;:21;;;5346:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5455:6;5425:11;:18;5437:5;5425:18;;;;;;;;;;;;;;;:27;5444:7;5425:27;;;;;;;;;;;;;;;:36;;;;5492:7;5476:32;;5485:5;5476:32;;;5501:6;5476:32;;;;;;:::i;:::-;;;;;;;;5175:340;;;:::o;5521:411::-;5621:24;5648:25;5658:5;5665:7;5648:9;:25::i;:::-;5621:52;;5707:17;5687:16;:37;5683:243;;5768:6;5748:16;:26;;5740:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5850:51;5859:5;5866:7;5894:6;5875:16;:25;5850:8;:51::i;:::-;5683:243;5611:321;5521:411;;;:::o;3114:780::-;3226:1;3210:18;;:4;:18;;;3202:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3302:1;3288:16;;:2;:16;;;3280:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3355:38;3376:4;3382:2;3386:6;3355:20;:38::i;:::-;3404:19;3426:9;:15;3436:4;3426:15;;;;;;;;;;;;;;;;3404:37;;3474:6;3459:11;:21;;3451:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3589:6;3575:11;:20;3557:9;:15;3567:4;3557:15;;;;;;;;;;;;;;;:38;;;;3781:6;3764:9;:13;3774:2;3764:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;3828:2;3813:26;;3822:4;3813:26;;;3832:6;3813:26;;;;;;:::i;:::-;;;;;;;;3850:37;3870:4;3876:2;3880:6;3850:19;:37::i;:::-;3192:702;3114:780;;;:::o;4514:655::-;4616:1;4597:21;;:7;:21;;;4589:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4667:49;4688:7;4705:1;4709:6;4667:20;:49::i;:::-;4727:22;4752:9;:18;4762:7;4752:18;;;;;;;;;;;;;;;;4727:43;;4806:6;4788:14;:24;;4780:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4923:6;4906:14;:23;4885:9;:18;4895:7;4885:18;;;;;;;;;;;;;;;:44;;;;5034:6;5018:12;;:22;;;;;;;;;;;5092:1;5066:37;;5075:7;5066:37;;;5096:6;5066:37;;;;;;:::i;:::-;;;;;;;;5114:48;5134:7;5151:1;5155:6;5114:19;:48::i;:::-;4579:590;4514:655;;:::o;5938:91::-;;;;:::o;6035:90::-;;;;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:180::-;6051:77;6048:1;6041:88;6148:4;6145:1;6138:15;6172:4;6169:1;6162:15;6189:320;6233:6;6270:1;6264:4;6260:12;6250:22;;6317:1;6311:4;6307:12;6338:18;6328:81;;6394:4;6386:6;6382:17;6372:27;;6328:81;6456:2;6448:6;6445:14;6425:18;6422:38;6419:84;;6475:18;;:::i;:::-;6419:84;6240:269;6189:320;;;:::o;6515:180::-;6563:77;6560:1;6553:88;6660:4;6657:1;6650:15;6684:4;6681:1;6674:15;6701:191;6741:3;6760:20;6778:1;6760:20;:::i;:::-;6755:25;;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6837:1;6834;6830:9;6823:16;;6858:3;6855:1;6852:10;6849:36;;;6865:18;;:::i;:::-;6849:36;6701:191;;;;:::o;6898:224::-;7038:34;7034:1;7026:6;7022:14;7015:58;7107:7;7102:2;7094:6;7090:15;7083:32;6898:224;:::o;7128:366::-;7270:3;7291:67;7355:2;7350:3;7291:67;:::i;:::-;7284:74;;7367:93;7456:3;7367:93;:::i;:::-;7485:2;7480:3;7476:12;7469:19;;7128:366;;;:::o;7500:419::-;7666:4;7704:2;7693:9;7689:18;7681:26;;7753:9;7747:4;7743:20;7739:1;7728:9;7724:17;7717:47;7781:131;7907:4;7781:131;:::i;:::-;7773:139;;7500:419;;;:::o;7925:223::-;8065:34;8061:1;8053:6;8049:14;8042:58;8134:6;8129:2;8121:6;8117:15;8110:31;7925:223;:::o;8154:366::-;8296:3;8317:67;8381:2;8376:3;8317:67;:::i;:::-;8310:74;;8393:93;8482:3;8393:93;:::i;:::-;8511:2;8506:3;8502:12;8495:19;;8154:366;;;:::o;8526:419::-;8692:4;8730:2;8719:9;8715:18;8707:26;;8779:9;8773:4;8769:20;8765:1;8754:9;8750:17;8743:47;8807:131;8933:4;8807:131;:::i;:::-;8799:139;;8526:419;;;:::o;8951:221::-;9091:34;9087:1;9079:6;9075:14;9068:58;9160:4;9155:2;9147:6;9143:15;9136:29;8951:221;:::o;9178:366::-;9320:3;9341:67;9405:2;9400:3;9341:67;:::i;:::-;9334:74;;9417:93;9506:3;9417:93;:::i;:::-;9535:2;9530:3;9526:12;9519:19;;9178:366;;;:::o;9550:419::-;9716:4;9754:2;9743:9;9739:18;9731:26;;9803:9;9797:4;9793:20;9789:1;9778:9;9774:17;9767:47;9831:131;9957:4;9831:131;:::i;:::-;9823:139;;9550:419;;;:::o;9975:179::-;10115:31;10111:1;10103:6;10099:14;10092:55;9975:179;:::o;10160:366::-;10302:3;10323:67;10387:2;10382:3;10323:67;:::i;:::-;10316:74;;10399:93;10488:3;10399:93;:::i;:::-;10517:2;10512:3;10508:12;10501:19;;10160:366;;;:::o;10532:419::-;10698:4;10736:2;10725:9;10721:18;10713:26;;10785:9;10779:4;10775:20;10771:1;10760:9;10756:17;10749:47;10813:131;10939:4;10813:131;:::i;:::-;10805:139;;10532:419;;;:::o;10957:224::-;11097:34;11093:1;11085:6;11081:14;11074:58;11166:7;11161:2;11153:6;11149:15;11142:32;10957:224;:::o;11187:366::-;11329:3;11350:67;11414:2;11409:3;11350:67;:::i;:::-;11343:74;;11426:93;11515:3;11426:93;:::i;:::-;11544:2;11539:3;11535:12;11528:19;;11187:366;;;:::o;11559:419::-;11725:4;11763:2;11752:9;11748:18;11740:26;;11812:9;11806:4;11802:20;11798:1;11787:9;11783:17;11776:47;11840:131;11966:4;11840:131;:::i;:::-;11832:139;;11559:419;;;:::o;11984:222::-;12124:34;12120:1;12112:6;12108:14;12101:58;12193:5;12188:2;12180:6;12176:15;12169:30;11984:222;:::o;12212:366::-;12354:3;12375:67;12439:2;12434:3;12375:67;:::i;:::-;12368:74;;12451:93;12540:3;12451:93;:::i;:::-;12569:2;12564:3;12560:12;12553:19;;12212:366;;;:::o;12584:419::-;12750:4;12788:2;12777:9;12773:18;12765:26;;12837:9;12831:4;12827:20;12823:1;12812:9;12808:17;12801:47;12865:131;12991:4;12865:131;:::i;:::-;12857:139;;12584:419;;;:::o;13009:225::-;13149:34;13145:1;13137:6;13133:14;13126:58;13218:8;13213:2;13205:6;13201:15;13194:33;13009:225;:::o;13240:366::-;13382:3;13403:67;13467:2;13462:3;13403:67;:::i;:::-;13396:74;;13479:93;13568:3;13479:93;:::i;:::-;13597:2;13592:3;13588:12;13581:19;;13240:366;;;:::o;13612:419::-;13778:4;13816:2;13805:9;13801:18;13793:26;;13865:9;13859:4;13855:20;13851:1;13840:9;13836:17;13829:47;13893:131;14019:4;13893:131;:::i;:::-;13885:139;;13612:419;;;:::o;14037:220::-;14177:34;14173:1;14165:6;14161:14;14154:58;14246:3;14241:2;14233:6;14229:15;14222:28;14037:220;:::o;14263:366::-;14405:3;14426:67;14490:2;14485:3;14426:67;:::i;:::-;14419:74;;14502:93;14591:3;14502:93;:::i;:::-;14620:2;14615:3;14611:12;14604:19;;14263:366;;;:::o;14635:419::-;14801:4;14839:2;14828:9;14824:18;14816:26;;14888:9;14882:4;14878:20;14874:1;14863:9;14859:17;14852:47;14916:131;15042:4;14916:131;:::i;:::-;14908:139;;14635:419;;;:::o;15060:221::-;15200:34;15196:1;15188:6;15184:14;15177:58;15269:4;15264:2;15256:6;15252:15;15245:29;15060:221;:::o;15287:366::-;15429:3;15450:67;15514:2;15509:3;15450:67;:::i;:::-;15443:74;;15526:93;15615:3;15526:93;:::i;:::-;15644:2;15639:3;15635:12;15628:19;;15287:366;;;:::o;15659:419::-;15825:4;15863:2;15852:9;15848:18;15840:26;;15912:9;15906:4;15902:20;15898:1;15887:9;15883:17;15876:47;15940:131;16066:4;15940:131;:::i;:::-;15932:139;;15659:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1095800",
								"executionCost": "1138",
								"totalCost": "1096938"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "2518",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"maxSupply()": "2498",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"init(string memory,string memory,uint8,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 6127,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c91727b3c63a3b1df38eebcbd8494ecef22aeb5360deddeea02d036244f299ec64736f6c63430008140033",
									".code": [
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "D5ABEB01"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "79CC6790"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "42966C68"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 199,
											"end": 6127,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 817,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1792,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1792,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1792,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1133,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1133,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1962,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1962,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1962,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1029,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2187,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2187,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2187,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2856,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2856,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1344,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1344,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1344,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2949,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2949,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 921,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 921,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2425,
											"end": 2850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2425,
											"end": 2850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2425,
											"end": 2850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1475,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1475,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1475,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1245,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1245,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1637,
											"end": 1786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1637,
											"end": 1786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1637,
											"end": 1786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 871,
											"end": 884,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 903,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 896,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 896,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 896,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1900,
											"end": 1910,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1891,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1928,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1891,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1938,
											"end": 1949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1232,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1220,
											"end": 1232,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2075,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2116,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2075,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2136,
											"end": 2140,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2126,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2153,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2126,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2163,
											"end": 2174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2317,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2336,
											"end": 2341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2350,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2362,
											"end": 2367,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2352,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2352,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2352,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2327,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2391,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2327,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2412,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2401,
											"end": 2412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2917,
											"end": 2927,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2911,
											"end": 2936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2911,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1453,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3060,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3068,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3025,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3025,
											"end": 3069,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3025,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3079,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1009,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1002,
											"end": 1016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1002,
											"end": 1016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 921,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2560,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2560,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2607,
											"end": 2612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2597,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2622,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2597,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2675,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2675,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2632,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2632,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2774,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2810,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2792,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2751,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2811,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2751,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2843,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2843,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1580,
											"end": 1590,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1570,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1603,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1570,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1613,
											"end": 1624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1763,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1769,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1778,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1779,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1779,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5515,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5175,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5276,
											"end": 5295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5276,
											"end": 5295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5268,
											"end": 5336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5268,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5375,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5346,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5346,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5461,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5436,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5425,
											"end": 5452,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5461,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5425,
											"end": 5461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5485,
											"end": 5490,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5476,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5508,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5932,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5521,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5621,
											"end": 5645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5658,
											"end": 5663,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5665,
											"end": 5672,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5648,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5648,
											"end": 5673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5648,
											"end": 5673,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5648,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5621,
											"end": 5673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5621,
											"end": 5673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5724,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5687,
											"end": 5703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5687,
											"end": 5724,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5683,
											"end": 5926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5764,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5774,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5774,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5740,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5740,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5850,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5859,
											"end": 5864,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5866,
											"end": 5873,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5891,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5850,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5850,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5850,
											"end": 5901,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5850,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5926,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5683,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3894,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3114,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3210,
											"end": 3228,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3202,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3202,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3280,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3280,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3376,
											"end": 3380,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3355,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3355,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3355,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3441,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3480,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3480,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3451,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3451,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3595,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3567,
											"end": 3571,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 3776,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3832,
											"end": 3838,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3813,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3839,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3850,
											"end": 3887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3887,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3850,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 5169,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4514,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4589,
											"end": 4656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4589,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4688,
											"end": 4695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4705,
											"end": 4706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4715,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4667,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4716,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4667,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4769,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4780,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4780,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4895,
											"end": 4902,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4929,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4929,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5034,
											"end": 5040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5030,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5018,
											"end": 5030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5066,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5103,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5134,
											"end": 5141,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5151,
											"end": 5152,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5114,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5162,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5114,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 5169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6029,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5938,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6125,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6035,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5948,
											"end": 5970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5927,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6003,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6051,
											"end": 6128,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6153,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6177,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6328,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6422,
											"end": 6460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6475,
											"end": 6493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 6475,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 6419,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6515,
											"end": 6695,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6515,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6641,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6657,
											"end": 6658,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6650,
											"end": 6665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6688,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6760,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6794,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6823,
											"end": 6839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6823,
											"end": 6839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6858,
											"end": 6861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6862,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6865,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6849,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7072,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7034,
											"end": 7035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7015,
											"end": 7073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7114,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7115,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 7122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 7122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7270,
											"end": 7273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 7355,
											"end": 7357,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7350,
											"end": 7353,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7291,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 7291,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7456,
											"end": 7459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7367,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7367,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7480,
											"end": 7483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7666,
											"end": 7670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7743,
											"end": 7763,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7717,
											"end": 7764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7781,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7781,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7500,
											"end": 7919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7500,
											"end": 7919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8065,
											"end": 8099,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8061,
											"end": 8062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8042,
											"end": 8100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8140,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8129,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8121,
											"end": 8127,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8132,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7925,
											"end": 8148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7925,
											"end": 8148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 8381,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8376,
											"end": 8379,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 8317,
											"end": 8384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 8317,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 8482,
											"end": 8485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8393,
											"end": 8486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 8393,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8502,
											"end": 8514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8495,
											"end": 8514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8728,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8779,
											"end": 8788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8767,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8743,
											"end": 8790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 8933,
											"end": 8937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8807,
											"end": 8938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 8807,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8526,
											"end": 8945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9091,
											"end": 9125,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9085,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9075,
											"end": 9089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9068,
											"end": 9126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9155,
											"end": 9157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9147,
											"end": 9153,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9143,
											"end": 9158,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8951,
											"end": 9172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8951,
											"end": 9172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9320,
											"end": 9323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 9405,
											"end": 9407,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9400,
											"end": 9403,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9341,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 9341,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9506,
											"end": 9509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9417,
											"end": 9510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9417,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9530,
											"end": 9533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9519,
											"end": 9538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9716,
											"end": 9720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9754,
											"end": 9756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9731,
											"end": 9757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9813,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9767,
											"end": 9814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 9957,
											"end": 9961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 9831,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 9831,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10146,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 10111,
											"end": 10112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10092,
											"end": 10147,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 10154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 10154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10302,
											"end": 10305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10387,
											"end": 10389,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 10382,
											"end": 10385,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 10323,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10323,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10390,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10488,
											"end": 10491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 10399,
											"end": 10492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10399,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10517,
											"end": 10519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10512,
											"end": 10515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10501,
											"end": 10520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10501,
											"end": 10520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10160,
											"end": 10526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10160,
											"end": 10526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10698,
											"end": 10702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10738,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10721,
											"end": 10739,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10713,
											"end": 10739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10785,
											"end": 10794,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10760,
											"end": 10769,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10756,
											"end": 10773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10749,
											"end": 10796,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 10939,
											"end": 10943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 10813,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 10813,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10805,
											"end": 10944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10805,
											"end": 10944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10532,
											"end": 10951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10532,
											"end": 10951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11097,
											"end": 11131,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 11093,
											"end": 11094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11085,
											"end": 11091,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11081,
											"end": 11095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11132,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11166,
											"end": 11173,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11161,
											"end": 11163,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11149,
											"end": 11164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11142,
											"end": 11174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 11181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11329,
											"end": 11332,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 11414,
											"end": 11416,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 11409,
											"end": 11412,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 11350,
											"end": 11417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 11350,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11343,
											"end": 11417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11343,
											"end": 11417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11515,
											"end": 11518,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 11426,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 11426,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11544,
											"end": 11546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11535,
											"end": 11547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11187,
											"end": 11553,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11187,
											"end": 11553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11725,
											"end": 11729,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11752,
											"end": 11761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11740,
											"end": 11766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11812,
											"end": 11821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11806,
											"end": 11810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11802,
											"end": 11822,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11798,
											"end": 11799,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11796,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11783,
											"end": 11800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11776,
											"end": 11823,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 11840,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 11840,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11832,
											"end": 11971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12124,
											"end": 12158,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12108,
											"end": 12122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12101,
											"end": 12159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12193,
											"end": 12198,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12188,
											"end": 12190,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12176,
											"end": 12191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12169,
											"end": 12199,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11984,
											"end": 12206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11984,
											"end": 12206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12354,
											"end": 12357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 12375,
											"end": 12442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 12375,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12368,
											"end": 12442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 12540,
											"end": 12543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 12451,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 12451,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12569,
											"end": 12571,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12564,
											"end": 12567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12560,
											"end": 12572,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12553,
											"end": 12572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12212,
											"end": 12578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12212,
											"end": 12578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12750,
											"end": 12754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12777,
											"end": 12786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12765,
											"end": 12791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12831,
											"end": 12835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12827,
											"end": 12847,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12821,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12808,
											"end": 12825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12801,
											"end": 12848,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 12991,
											"end": 12995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 12865,
											"end": 12996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 12865,
											"end": 12996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12857,
											"end": 12996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12584,
											"end": 13003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12584,
											"end": 13003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13149,
											"end": 13183,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13133,
											"end": 13147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13126,
											"end": 13184,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13218,
											"end": 13226,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13205,
											"end": 13211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13201,
											"end": 13216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13194,
											"end": 13227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13009,
											"end": 13234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13009,
											"end": 13234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13382,
											"end": 13385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 13467,
											"end": 13469,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 13403,
											"end": 13470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 13403,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13396,
											"end": 13470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13396,
											"end": 13470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 13568,
											"end": 13571,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 13479,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 13479,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13597,
											"end": 13599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13588,
											"end": 13600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13581,
											"end": 13600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13581,
											"end": 13600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13240,
											"end": 13606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13778,
											"end": 13782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13816,
											"end": 13818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13805,
											"end": 13814,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13793,
											"end": 13819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13793,
											"end": 13819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13865,
											"end": 13874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13859,
											"end": 13863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13855,
											"end": 13875,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13851,
											"end": 13852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13840,
											"end": 13849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13836,
											"end": 13853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13829,
											"end": 13876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 14019,
											"end": 14023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 13893,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 13893,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13885,
											"end": 14024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13885,
											"end": 14024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 14031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13612,
											"end": 14031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14037,
											"end": 14257,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 14037,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14177,
											"end": 14211,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 14173,
											"end": 14174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14161,
											"end": 14175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14154,
											"end": 14212,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14246,
											"end": 14249,
											"name": "PUSH",
											"source": 4,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14241,
											"end": 14243,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14233,
											"end": 14239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14229,
											"end": 14244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14222,
											"end": 14250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14037,
											"end": 14257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14037,
											"end": 14257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14405,
											"end": 14408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 14490,
											"end": 14492,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 14485,
											"end": 14488,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 14426,
											"end": 14493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 14426,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14419,
											"end": 14493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14419,
											"end": 14493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 14591,
											"end": 14594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 14502,
											"end": 14595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 14502,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14620,
											"end": 14622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14615,
											"end": 14618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14611,
											"end": 14623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14604,
											"end": 14623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14604,
											"end": 14623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14263,
											"end": 14629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14263,
											"end": 14629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14801,
											"end": 14805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14839,
											"end": 14841,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14828,
											"end": 14837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14824,
											"end": 14842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14816,
											"end": 14842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14816,
											"end": 14842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14888,
											"end": 14897,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14882,
											"end": 14886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14878,
											"end": 14898,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14874,
											"end": 14875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14872,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14859,
											"end": 14876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14852,
											"end": 14899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 15042,
											"end": 15046,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 14916,
											"end": 15047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 14916,
											"end": 15047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14908,
											"end": 15047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14908,
											"end": 15047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 15054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 15054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15060,
											"end": 15281,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 15060,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15200,
											"end": 15234,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 15196,
											"end": 15197,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15184,
											"end": 15198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15177,
											"end": 15235,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15269,
											"end": 15273,
											"name": "PUSH",
											"source": 4,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15264,
											"end": 15266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15256,
											"end": 15262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15252,
											"end": 15267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15274,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15060,
											"end": 15281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15060,
											"end": 15281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15429,
											"end": 15432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 15514,
											"end": 15516,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 15509,
											"end": 15512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 15450,
											"end": 15517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 15450,
											"end": 15517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15443,
											"end": 15517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15443,
											"end": 15517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 15615,
											"end": 15618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 15526,
											"end": 15619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 15526,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15644,
											"end": 15646,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15639,
											"end": 15642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15635,
											"end": 15647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15628,
											"end": 15647,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15628,
											"end": 15647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15287,
											"end": 15653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15287,
											"end": 15653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15825,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15863,
											"end": 15865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15852,
											"end": 15861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15848,
											"end": 15866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15840,
											"end": 15866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15840,
											"end": 15866,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15912,
											"end": 15921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15906,
											"end": 15910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15902,
											"end": 15922,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15898,
											"end": 15899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15896,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15883,
											"end": 15900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15876,
											"end": 15923,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 16066,
											"end": 16070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 15940,
											"end": 16071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 15940,
											"end": 16071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15932,
											"end": 16071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15932,
											"end": 16071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15659,
											"end": 16078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15659,
											"end": 16078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0xa160b0fc676a005360af1672d8a030773fac2720d1d4e1f060be94caadc10d80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ae1b489a5414df8c3de09e08043a383da29b42cefbb888fea694318d254033\",\"dweb:/ipfs/QmTeJzDsjQsiP3KrUz5AVMf8PzGoU8YekevErD1B5hGtZF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 369,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 375,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 377,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 379,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_maxSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 381,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 383,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 385,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							331
						]
					},
					"id": 332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 256,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 331,
							"linearizedBaseContracts": [
								331
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 265,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 274,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 331,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 331,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 331,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 331,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 331,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 331,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 332,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								265,
								274
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							331
						],
						"IERC20Metadata": [
							357
						]
					},
					"id": 358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 358,
							"sourceUnit": 332,
							"src": "151:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 334,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 331,
										"src": "159:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 337,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 331,
										"src": "305:6:2"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 336,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 357,
							"linearizedBaseContracts": [
								357,
								331
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 357,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 357,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 353,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 357,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 358,
							"src": "277:405:2",
							"usedErrors": [],
							"usedEvents": [
								265,
								274
							]
						}
					],
					"src": "125:558:2"
				},
				"id": 2
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							976
						],
						"IERC20": [
							331
						],
						"IERC20Metadata": [
							357
						],
						"Initializable": [
							253
						]
					},
					"id": 977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 359,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 977,
							"sourceUnit": 358,
							"src": "58:75:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 977,
							"sourceUnit": 254,
							"src": "134:63:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 362,
										"name": "Initializable",
										"nameLocations": [
											"217:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "217:13:3"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "217:13:3"
								},
								{
									"baseName": {
										"id": 364,
										"name": "IERC20Metadata",
										"nameLocations": [
											"232:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 357,
										"src": "232:14:3"
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "232:14:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976,
								357,
								331,
								253
							],
							"name": "ERC20",
							"nameLocation": "208:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "289:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "253:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 368,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 366,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "261:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "253:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "272:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 375,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "361:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "305:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 374,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 370,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "313:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "305:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 373,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 371,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "332:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "324:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 372,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "343:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 377,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "395:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "379:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "379:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 379,
									"mutability": "mutable",
									"name": "_maxSupply",
									"nameLocation": "429:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "413:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "413:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 381,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "461:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "446:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 380,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "446:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 383,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "487:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "472:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 382,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "472:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 385,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "514:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 976,
									"src": "500:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 384,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "500:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "689:122:3",
										"statements": [
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 398,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "699:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 399,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "707:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "699:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "699:13:3"
											},
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 402,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "722:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 403,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "732:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "722:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "722:17:3"
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "749:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "761:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "749:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "749:21:3"
											},
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 410,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "781:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 411,
														"name": "maxSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "794:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "781:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "781:23:3"
											}
										]
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyInitializing",
												"nameLocations": [
													"672:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "672:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "672:16:3"
										}
									],
									"name": "init",
									"nameLocation": "539:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "567:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "553:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "553:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "596:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "582:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "582:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "619:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "613:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 390,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "613:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "maxSupply_",
												"nameLocation": "646:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "638:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:119:3"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:3"
									},
									"scope": 976,
									"src": "530:281:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										344
									],
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "886:29:3",
										"statements": [
											{
												"expression": {
													"id": 421,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 381,
													"src": "903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 420,
												"id": 422,
												"nodeType": "Return",
												"src": "896:12:3"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "826:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 417,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "853:8:3"
									},
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:2:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "871:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "871:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:15:3"
									},
									"scope": 976,
									"src": "817:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										350
									],
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "992:31:3",
										"statements": [
											{
												"expression": {
													"id": 430,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 383,
													"src": "1009:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 429,
												"id": 431,
												"nodeType": "Return",
												"src": "1002:14:3"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "930:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 426,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "959:8:3"
									},
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:2:3"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "977:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "977:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:15:3"
									},
									"scope": 976,
									"src": "921:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										356
									],
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "1094:33:3",
										"statements": [
											{
												"expression": {
													"id": 439,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 385,
													"src": "1111:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 438,
												"id": 440,
												"nodeType": "Return",
												"src": "1104:16:3"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1038:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1069:8:3"
									},
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1087:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 436,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1087:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:7:3"
									},
									"scope": 976,
									"src": "1029:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										280
									],
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "1203:36:3",
										"statements": [
											{
												"expression": {
													"id": 448,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 377,
													"src": "1220:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 447,
												"id": 449,
												"nodeType": "Return",
												"src": "1213:19:3"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1142:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 444,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1176:8:3"
									},
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:3"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1194:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:9:3"
									},
									"scope": 976,
									"src": "1133:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1304:34:3",
										"statements": [
											{
												"expression": {
													"id": 456,
													"name": "_maxSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "1321:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 455,
												"id": 457,
												"nodeType": "Return",
												"src": "1314:17:3"
											}
										]
									},
									"functionSelector": "d5abeb01",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "1254:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1263:2:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1295:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:9:3"
									},
									"scope": 976,
									"src": "1245:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										288
									],
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1427:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 467,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1444:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 469,
													"indexExpression": {
														"id": 468,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "1454:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1444:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 470,
												"nodeType": "Return",
												"src": "1437:25:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1353:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 463,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1400:8:3"
									},
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1371:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1363:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:17:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "1418:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:9:3"
									},
									"scope": 976,
									"src": "1344:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										298
									],
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "1560:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1580:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1584:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1580:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "1592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "1596:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "1570:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "1570:33:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1620:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 481,
												"id": 490,
												"nodeType": "Return",
												"src": "1613:11:3"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1484:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 478,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1536:8:3"
									},
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1501:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1493:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1513:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1505:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:28:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1554:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1554:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:6:3"
									},
									"scope": 976,
									"src": "1475:156:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										308
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1735:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 502,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1752:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 504,
														"indexExpression": {
															"id": 503,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "1764:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1752:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 506,
													"indexExpression": {
														"id": 505,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "1771:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1752:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 501,
												"id": 507,
												"nodeType": "Return",
												"src": "1745:34:3"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1646:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 498,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1708:8:3"
									},
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1664:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1656:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1679:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1671:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:32:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1726:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:9:3"
									},
									"scope": 976,
									"src": "1637:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										318
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "1881:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 520,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1900:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1904:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1900:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "1912:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1921:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 519,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "1891:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1891:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1891:37:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1945:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 518,
												"id": 527,
												"nodeType": "Return",
												"src": "1938:11:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1801:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 515,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1857:8:3"
									},
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1817:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1809:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1834:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1826:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:33:3"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1875:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1874:6:3"
									},
									"scope": 976,
									"src": "1792:164:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										330
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "2065:116:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2091:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 543,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2097:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2101:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2097:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2109:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "2075:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "2075:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2136:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "2142:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2146:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 548,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "2126:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2126:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 540,
												"id": 555,
												"nodeType": "Return",
												"src": "2163:11:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1971:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2041:8:3"
									},
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1992:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1984:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2006:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1998:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2018:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2010:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:42:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "2059:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2059:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2058:6:3"
									},
									"scope": 976,
									"src": "1962:219:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2281:138:3",
										"statements": [
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2299:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 584,
														"src": "2291:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 566,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2291:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"expression": {
														"id": 568,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2307:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2311:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2307:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2291:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "2336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2343:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 575,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2362:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 576,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "2369:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "2352:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2352:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 578,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "2380:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2352:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2327:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2327:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "2327:64:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2408:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 565,
												"id": 583,
												"nodeType": "Return",
												"src": "2401:11:3"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "2196:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2222:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2214:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "2239:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2231:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:37:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2275:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2275:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:6:3"
									},
									"scope": 976,
									"src": "2187:232:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2524:326:3",
										"statements": [
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2542:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "2534:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 594,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2534:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"expression": {
														"id": 596,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2550:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2554:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2550:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2534:26:3"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "2578:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "2570:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2570:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"id": 602,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "2607:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "2614:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 601,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "2597:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2597:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 607,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "2640:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 608,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "2660:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2640:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2677:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2632:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2632:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "2632:85:3"
											},
											{
												"id": 621,
												"nodeType": "UncheckedBlock",
												"src": "2727:95:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 614,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2760:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 615,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2767:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 616,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "2776:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 617,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "2795:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2776:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 613,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "2751:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2751:60:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 620,
														"nodeType": "ExpressionStatement",
														"src": "2751:60:3"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2839:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 593,
												"id": 623,
												"nodeType": "Return",
												"src": "2832:11:3"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "2434:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2460:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2452:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "2477:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2469:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:42:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2518:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2518:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2517:6:3"
									},
									"scope": 976,
									"src": "2425:425:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "2901:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 631,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2917:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2921:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2917:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "2929:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2911:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2911:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "2911:25:3"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2865:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2878:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2870:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:16:3"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2901:0:3"
									},
									"scope": 976,
									"src": "2856:87:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3015:93:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "3041:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 646,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3050:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3054:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3050:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3062:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3025:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3025:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "3025:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "3085:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3094:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "3079:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "3079:22:3"
											}
										]
									},
									"functionSelector": "79cc6790",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "2958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2975:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2967:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2992:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2984:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2966:33:3"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3015:0:3"
									},
									"scope": 976,
									"src": "2949:159:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "3192:702:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 667,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "3210:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3226:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3218:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3218:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3218:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3210:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3230:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3202:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3202:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "3202:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 677,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "3288:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3302:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3294:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 678,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3294:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3294:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3288:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3306:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3280:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3280:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "3280:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3376:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "3382:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 689,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3386:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "3355:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3355:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "3355:38:3"
											},
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "3412:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "3404:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3404:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"baseExpression": {
														"id": 694,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "3426:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 696,
													"indexExpression": {
														"id": 695,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "3436:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3426:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3404:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "3459:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 700,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "3474:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3459:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3482:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3451:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3451:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "3451:72:3"
											},
											{
												"id": 719,
												"nodeType": "UncheckedBlock",
												"src": "3533:265:3",
												"statements": [
													{
														"expression": {
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 705,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "3557:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 707,
																"indexExpression": {
																	"id": 706,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "3567:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3557:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 708,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "3575:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 709,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "3589:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3575:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3557:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 712,
														"nodeType": "ExpressionStatement",
														"src": "3557:38:3"
													},
													{
														"expression": {
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 713,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "3764:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 715,
																"indexExpression": {
																	"id": 714,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "3774:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "3764:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 716,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "3781:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3764:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 718,
														"nodeType": "ExpressionStatement",
														"src": "3764:23:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 721,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "3828:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3832:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 720,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "3813:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3813:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "EmitStatement",
												"src": "3808:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "3876:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3880:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 726,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "3850:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3850:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "3850:37:3"
											}
										]
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "3123:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3141:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3133:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3155:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3147:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3167:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3159:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:42:3"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3192:0:3"
									},
									"scope": 976,
									"src": "3114:780:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "3965:543:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 741,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "3983:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 742,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "3998:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3983:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 744,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "4008:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3983:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20636170206578636565646564",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4020:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b196d04aa8b19a17cc06098e43b9795628c4df0d716802f677ced017feecade5",
																"typeString": "literal_string \"ERC20: cap exceeded\""
															},
															"value": "ERC20: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b196d04aa8b19a17cc06098e43b9795628c4df0d716802f677ced017feecade5",
																"typeString": "literal_string \"ERC20: cap exceeded\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3975:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "3975:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 750,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "4060:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4079:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4071:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 751,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4071:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4071:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4060:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4083:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4052:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4052:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "4052:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4157:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4149:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 760,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4149:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4161:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4170:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 759,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "4128:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4128:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "4128:49:3"
											},
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 768,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "4188:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 769,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "4204:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4188:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "4188:22:3"
											},
											{
												"id": 778,
												"nodeType": "UncheckedBlock",
												"src": "4220:171:3",
												"statements": [
													{
														"expression": {
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 772,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "4352:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 774,
																"indexExpression": {
																	"id": 773,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "4362:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4352:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 775,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "4374:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4352:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 777,
														"nodeType": "ExpressionStatement",
														"src": "4352:28:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4422:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4414:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 780,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4414:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4414:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4426:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4435:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "4405:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4405:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "EmitStatement",
												"src": "4400:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4481:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4473:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 789,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4473:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4473:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4485:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4494:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "4453:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4453:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "4453:48:3"
											}
										]
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "3909:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3940:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3932:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3914:33:3"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3965:0:3"
									},
									"scope": 976,
									"src": "3900:608:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "4579:590:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "4597:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4616:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4608:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 807,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4608:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4608:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4597:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4620:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4589:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4589:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "4589:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 816,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4688:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4705:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4697:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4697:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4697:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4709:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 815,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "4667:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4667:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "4667:49:3"
											},
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "4735:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "4727:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 824,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4727:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"id": 826,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "4752:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4762:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4752:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4727:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 831,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "4788:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 832,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "4806:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4788:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4814:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4780:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4780:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "4780:71:3"
											},
											{
												"id": 849,
												"nodeType": "UncheckedBlock",
												"src": "4861:190:3",
												"statements": [
													{
														"expression": {
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 837,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "4885:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 839,
																"indexExpression": {
																	"id": 838,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "4895:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4885:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 840,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "4906:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 841,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "4923:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4906:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4885:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 844,
														"nodeType": "ExpressionStatement",
														"src": "4885:44:3"
													},
													{
														"expression": {
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 845,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "5018:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 846,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "5034:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5018:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 848,
														"nodeType": "ExpressionStatement",
														"src": "5018:22:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 851,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5075:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5092:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5084:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 852,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5084:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5084:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "5096:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "5066:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5066:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "5061:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5134:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5151:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5143:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5143:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5143:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "5155:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "5114:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5114:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "5114:48:3"
											}
										]
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "4523:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4537:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "4529:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4554:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "4546:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4528:33:3"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4579:0:3"
									},
									"scope": 976,
									"src": "4514:655:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "5258:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 879,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "5276:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5293:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 880,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5285:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5276:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5297:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5268:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5268:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "5268:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "5354:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5373:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5365:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 890,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5365:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5365:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5354:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5377:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5346:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5346:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "5346:68:3"
											},
											{
												"expression": {
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 898,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5425:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 901,
															"indexExpression": {
																"id": 899,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "5437:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5425:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 902,
														"indexExpression": {
															"id": 900,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5444:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5425:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 903,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "5455:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5425:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "5425:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 907,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5485:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5492:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5501:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 906,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "5476:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5476:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "EmitStatement",
												"src": "5471:37:3"
											}
										]
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "5184:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5201:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5193:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5193:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5216:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5208:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5233:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "5225:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5192:48:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5258:0:3"
									},
									"scope": 976,
									"src": "5175:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "5611:321:3",
										"statements": [
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5629:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "5621:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5621:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"arguments": [
														{
															"id": 925,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "5658:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "5665:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 924,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "5648:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5648:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5621:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 929,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "5687:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5712:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5712:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 930,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5707:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5707:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5721:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5707:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5687:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "IfStatement",
												"src": "5683:243:3",
												"trueBody": {
													"id": 952,
													"nodeType": "Block",
													"src": "5726:200:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 937,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 923,
																			"src": "5748:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 938,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "5768:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5748:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5776:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 936,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5740:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5740:68:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "5740:68:3"
														},
														{
															"id": 951,
															"nodeType": "UncheckedBlock",
															"src": "5822:94:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 944,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "5859:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 945,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "5866:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 946,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 923,
																					"src": "5875:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 947,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 919,
																					"src": "5894:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5875:25:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 943,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "5850:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5850:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 950,
																	"nodeType": "ExpressionStatement",
																	"src": "5850:51:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "5530:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5554:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5546:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5569:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5561:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5586:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5578:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5578:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5545:48:3"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:0:3"
									},
									"scope": 976,
									"src": "5521:411:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "6027:2:3",
										"statements": []
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "5947:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5976:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5968:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5990:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5982:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6002:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5994:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5967:42:3"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6027:0:3"
									},
									"scope": 976,
									"src": "5938:91:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "6123:2:3",
										"statements": []
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "6044:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6072:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6064:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6064:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6086:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6078:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6098:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6090:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6063:42:3"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6123:0:3"
									},
									"scope": 976,
									"src": "6035:90:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "199:5928:3",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24,
								265,
								274
							]
						}
					],
					"src": "32:6097:3"
				},
				"id": 3
			}
		}
	}
}